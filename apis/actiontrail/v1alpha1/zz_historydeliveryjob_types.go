/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HistoryDeliveryJobObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`
}

type HistoryDeliveryJobParameters struct {

	// +kubebuilder:validation:Required
	TrailName *string `json:"trailName" tf:"trail_name,omitempty"`
}

// HistoryDeliveryJobSpec defines the desired state of HistoryDeliveryJob
type HistoryDeliveryJobSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HistoryDeliveryJobParameters `json:"forProvider"`
}

// HistoryDeliveryJobStatus defines the observed state of HistoryDeliveryJob.
type HistoryDeliveryJobStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HistoryDeliveryJobObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HistoryDeliveryJob is the Schema for the HistoryDeliveryJobs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type HistoryDeliveryJob struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HistoryDeliveryJobSpec   `json:"spec"`
	Status            HistoryDeliveryJobStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HistoryDeliveryJobList contains a list of HistoryDeliveryJobs
type HistoryDeliveryJobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HistoryDeliveryJob `json:"items"`
}

// Repository type metadata.
var (
	HistoryDeliveryJob_Kind             = "HistoryDeliveryJob"
	HistoryDeliveryJob_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HistoryDeliveryJob_Kind}.String()
	HistoryDeliveryJob_KindAPIVersion   = HistoryDeliveryJob_Kind + "." + CRDGroupVersion.String()
	HistoryDeliveryJob_GroupVersionKind = CRDGroupVersion.WithKind(HistoryDeliveryJob_Kind)
)

func init() {
	SchemeBuilder.Register(&HistoryDeliveryJob{}, &HistoryDeliveryJobList{})
}
