/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DomainGroupObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type DomainGroupParameters struct {

	// +kubebuilder:validation:Optional
	DomainGroupName *string `json:"domainGroupName,omitempty" tf:"domain_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// +kubebuilder:validation:Optional
	Lang *string `json:"lang,omitempty" tf:"lang,omitempty"`
}

// DomainGroupSpec defines the desired state of DomainGroup
type DomainGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DomainGroupParameters `json:"forProvider"`
}

// DomainGroupStatus defines the observed state of DomainGroup.
type DomainGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DomainGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DomainGroup is the Schema for the DomainGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type DomainGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DomainGroupSpec   `json:"spec"`
	Status            DomainGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DomainGroupList contains a list of DomainGroups
type DomainGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DomainGroup `json:"items"`
}

// Repository type metadata.
var (
	DomainGroup_Kind             = "DomainGroup"
	DomainGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DomainGroup_Kind}.String()
	DomainGroup_KindAPIVersion   = DomainGroup_Kind + "." + CRDGroupVersion.String()
	DomainGroup_GroupVersionKind = CRDGroupVersion.WithKind(DomainGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&DomainGroup{}, &DomainGroupList{})
}
