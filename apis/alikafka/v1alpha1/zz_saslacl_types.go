/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SaslACLObservation struct {
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SaslACLParameters struct {

	// +kubebuilder:validation:Required
	ACLOperationType *string `json:"aclOperationType" tf:"acl_operation_type,omitempty"`

	// +kubebuilder:validation:Required
	ACLResourceName *string `json:"aclResourceName" tf:"acl_resource_name,omitempty"`

	// +kubebuilder:validation:Required
	ACLResourcePatternType *string `json:"aclResourcePatternType" tf:"acl_resource_pattern_type,omitempty"`

	// +kubebuilder:validation:Required
	ACLResourceType *string `json:"aclResourceType" tf:"acl_resource_type,omitempty"`

	// +kubebuilder:validation:Required
	InstanceID *string `json:"instanceId" tf:"instance_id,omitempty"`

	// +kubebuilder:validation:Required
	Username *string `json:"username" tf:"username,omitempty"`
}

// SaslACLSpec defines the desired state of SaslACL
type SaslACLSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SaslACLParameters `json:"forProvider"`
}

// SaslACLStatus defines the observed state of SaslACL.
type SaslACLStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SaslACLObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SaslACL is the Schema for the SaslACLs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type SaslACL struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SaslACLSpec   `json:"spec"`
	Status            SaslACLStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SaslACLList contains a list of SaslACLs
type SaslACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SaslACL `json:"items"`
}

// Repository type metadata.
var (
	SaslACL_Kind             = "SaslACL"
	SaslACL_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SaslACL_Kind}.String()
	SaslACL_KindAPIVersion   = SaslACL_Kind + "." + CRDGroupVersion.String()
	SaslACL_GroupVersionKind = CRDGroupVersion.WithKind(SaslACL_Kind)
)

func init() {
	SchemeBuilder.Register(&SaslACL{}, &SaslACLList{})
}
