/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlertContactGroupObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AlertContactGroupParameters struct {

	// +kubebuilder:validation:Required
	AlertContactGroupName *string `json:"alertContactGroupName" tf:"alert_contact_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	ContactIds []*string `json:"contactIds,omitempty" tf:"contact_ids,omitempty"`
}

// AlertContactGroupSpec defines the desired state of AlertContactGroup
type AlertContactGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AlertContactGroupParameters `json:"forProvider"`
}

// AlertContactGroupStatus defines the observed state of AlertContactGroup.
type AlertContactGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AlertContactGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AlertContactGroup is the Schema for the AlertContactGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type AlertContactGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AlertContactGroupSpec   `json:"spec"`
	Status            AlertContactGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AlertContactGroupList contains a list of AlertContactGroups
type AlertContactGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AlertContactGroup `json:"items"`
}

// Repository type metadata.
var (
	AlertContactGroup_Kind             = "AlertContactGroup"
	AlertContactGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AlertContactGroup_Kind}.String()
	AlertContactGroup_KindAPIVersion   = AlertContactGroup_Kind + "." + CRDGroupVersion.String()
	AlertContactGroup_GroupVersionKind = CRDGroupVersion.WithKind(AlertContactGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&AlertContactGroup{}, &AlertContactGroupList{})
}
