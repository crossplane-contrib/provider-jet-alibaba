/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AnnotationsObservation struct {
}

type AnnotationsParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type LabelsObservation struct {
}

type LabelsParameters struct {

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type PrometheusAlertRuleObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	PrometheusAlertRuleID *float64 `json:"prometheusAlertRuleId,omitempty" tf:"prometheus_alert_rule_id,omitempty"`

	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`
}

type PrometheusAlertRuleParameters struct {

	// +kubebuilder:validation:Optional
	Annotations []AnnotationsParameters `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// +kubebuilder:validation:Required
	ClusterID *string `json:"clusterId" tf:"cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	DispatchRuleID *string `json:"dispatchRuleId,omitempty" tf:"dispatch_rule_id,omitempty"`

	// +kubebuilder:validation:Required
	Duration *string `json:"duration" tf:"duration,omitempty"`

	// +kubebuilder:validation:Required
	Expression *string `json:"expression" tf:"expression,omitempty"`

	// +kubebuilder:validation:Optional
	Labels []LabelsParameters `json:"labels,omitempty" tf:"labels,omitempty"`

	// +kubebuilder:validation:Required
	Message *string `json:"message" tf:"message,omitempty"`

	// +kubebuilder:validation:Optional
	NotifyType *string `json:"notifyType,omitempty" tf:"notify_type,omitempty"`

	// +kubebuilder:validation:Required
	PrometheusAlertRuleName *string `json:"prometheusAlertRuleName" tf:"prometheus_alert_rule_name,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// PrometheusAlertRuleSpec defines the desired state of PrometheusAlertRule
type PrometheusAlertRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PrometheusAlertRuleParameters `json:"forProvider"`
}

// PrometheusAlertRuleStatus defines the observed state of PrometheusAlertRule.
type PrometheusAlertRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PrometheusAlertRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PrometheusAlertRule is the Schema for the PrometheusAlertRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type PrometheusAlertRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PrometheusAlertRuleSpec   `json:"spec"`
	Status            PrometheusAlertRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PrometheusAlertRuleList contains a list of PrometheusAlertRules
type PrometheusAlertRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrometheusAlertRule `json:"items"`
}

// Repository type metadata.
var (
	PrometheusAlertRule_Kind             = "PrometheusAlertRule"
	PrometheusAlertRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PrometheusAlertRule_Kind}.String()
	PrometheusAlertRule_KindAPIVersion   = PrometheusAlertRule_Kind + "." + CRDGroupVersion.String()
	PrometheusAlertRule_GroupVersionKind = CRDGroupVersion.WithKind(PrometheusAlertRule_Kind)
)

func init() {
	SchemeBuilder.Register(&PrometheusAlertRule{}, &PrometheusAlertRuleList{})
}
