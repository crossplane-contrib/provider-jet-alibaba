/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostAccountUserAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type HostAccountUserAttachmentParameters struct {

	// +kubebuilder:validation:Required
	HostAccountIds []*string `json:"hostAccountIds" tf:"host_account_ids,omitempty"`

	// +kubebuilder:validation:Required
	HostID *string `json:"hostId" tf:"host_id,omitempty"`

	// +kubebuilder:validation:Required
	InstanceID *string `json:"instanceId" tf:"instance_id,omitempty"`

	// +kubebuilder:validation:Required
	UserID *string `json:"userId" tf:"user_id,omitempty"`
}

// HostAccountUserAttachmentSpec defines the desired state of HostAccountUserAttachment
type HostAccountUserAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HostAccountUserAttachmentParameters `json:"forProvider"`
}

// HostAccountUserAttachmentStatus defines the observed state of HostAccountUserAttachment.
type HostAccountUserAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HostAccountUserAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HostAccountUserAttachment is the Schema for the HostAccountUserAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type HostAccountUserAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HostAccountUserAttachmentSpec   `json:"spec"`
	Status            HostAccountUserAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HostAccountUserAttachmentList contains a list of HostAccountUserAttachments
type HostAccountUserAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HostAccountUserAttachment `json:"items"`
}

// Repository type metadata.
var (
	HostAccountUserAttachment_Kind             = "HostAccountUserAttachment"
	HostAccountUserAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HostAccountUserAttachment_Kind}.String()
	HostAccountUserAttachment_KindAPIVersion   = HostAccountUserAttachment_Kind + "." + CRDGroupVersion.String()
	HostAccountUserAttachment_GroupVersionKind = CRDGroupVersion.WithKind(HostAccountUserAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&HostAccountUserAttachment{}, &HostAccountUserAttachmentList{})
}
