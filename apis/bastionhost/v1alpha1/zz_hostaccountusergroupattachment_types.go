/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostAccountUserGroupAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type HostAccountUserGroupAttachmentParameters struct {

	// +kubebuilder:validation:Required
	HostAccountIds []*string `json:"hostAccountIds" tf:"host_account_ids,omitempty"`

	// +kubebuilder:validation:Required
	HostID *string `json:"hostId" tf:"host_id,omitempty"`

	// +kubebuilder:validation:Required
	InstanceID *string `json:"instanceId" tf:"instance_id,omitempty"`

	// +kubebuilder:validation:Required
	UserGroupID *string `json:"userGroupId" tf:"user_group_id,omitempty"`
}

// HostAccountUserGroupAttachmentSpec defines the desired state of HostAccountUserGroupAttachment
type HostAccountUserGroupAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HostAccountUserGroupAttachmentParameters `json:"forProvider"`
}

// HostAccountUserGroupAttachmentStatus defines the observed state of HostAccountUserGroupAttachment.
type HostAccountUserGroupAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HostAccountUserGroupAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HostAccountUserGroupAttachment is the Schema for the HostAccountUserGroupAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type HostAccountUserGroupAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HostAccountUserGroupAttachmentSpec   `json:"spec"`
	Status            HostAccountUserGroupAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HostAccountUserGroupAttachmentList contains a list of HostAccountUserGroupAttachments
type HostAccountUserGroupAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HostAccountUserGroupAttachment `json:"items"`
}

// Repository type metadata.
var (
	HostAccountUserGroupAttachment_Kind             = "HostAccountUserGroupAttachment"
	HostAccountUserGroupAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HostAccountUserGroupAttachment_Kind}.String()
	HostAccountUserGroupAttachment_KindAPIVersion   = HostAccountUserGroupAttachment_Kind + "." + CRDGroupVersion.String()
	HostAccountUserGroupAttachment_GroupVersionKind = CRDGroupVersion.WithKind(HostAccountUserGroupAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&HostAccountUserGroupAttachment{}, &HostAccountUserGroupAttachmentList{})
}
