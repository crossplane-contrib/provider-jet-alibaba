/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TransitRouterRouteTableAssociationObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type TransitRouterRouteTableAssociationParameters struct {

	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// +kubebuilder:validation:Required
	TransitRouterAttachmentID *string `json:"transitRouterAttachmentId" tf:"transit_router_attachment_id,omitempty"`

	// +kubebuilder:validation:Required
	TransitRouterRouteTableID *string `json:"transitRouterRouteTableId" tf:"transit_router_route_table_id,omitempty"`
}

// TransitRouterRouteTableAssociationSpec defines the desired state of TransitRouterRouteTableAssociation
type TransitRouterRouteTableAssociationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TransitRouterRouteTableAssociationParameters `json:"forProvider"`
}

// TransitRouterRouteTableAssociationStatus defines the observed state of TransitRouterRouteTableAssociation.
type TransitRouterRouteTableAssociationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TransitRouterRouteTableAssociationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TransitRouterRouteTableAssociation is the Schema for the TransitRouterRouteTableAssociations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type TransitRouterRouteTableAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TransitRouterRouteTableAssociationSpec   `json:"spec"`
	Status            TransitRouterRouteTableAssociationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TransitRouterRouteTableAssociationList contains a list of TransitRouterRouteTableAssociations
type TransitRouterRouteTableAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TransitRouterRouteTableAssociation `json:"items"`
}

// Repository type metadata.
var (
	TransitRouterRouteTableAssociation_Kind             = "TransitRouterRouteTableAssociation"
	TransitRouterRouteTableAssociation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TransitRouterRouteTableAssociation_Kind}.String()
	TransitRouterRouteTableAssociation_KindAPIVersion   = TransitRouterRouteTableAssociation_Kind + "." + CRDGroupVersion.String()
	TransitRouterRouteTableAssociation_GroupVersionKind = CRDGroupVersion.WithKind(TransitRouterRouteTableAssociation_Kind)
)

func init() {
	SchemeBuilder.Register(&TransitRouterRouteTableAssociation{}, &TransitRouterRouteTableAssociationList{})
}
