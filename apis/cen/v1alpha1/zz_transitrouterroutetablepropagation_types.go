/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TransitRouterRouteTablePropagationObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type TransitRouterRouteTablePropagationParameters struct {

	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// +kubebuilder:validation:Required
	TransitRouterAttachmentID *string `json:"transitRouterAttachmentId" tf:"transit_router_attachment_id,omitempty"`

	// +kubebuilder:validation:Required
	TransitRouterRouteTableID *string `json:"transitRouterRouteTableId" tf:"transit_router_route_table_id,omitempty"`
}

// TransitRouterRouteTablePropagationSpec defines the desired state of TransitRouterRouteTablePropagation
type TransitRouterRouteTablePropagationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TransitRouterRouteTablePropagationParameters `json:"forProvider"`
}

// TransitRouterRouteTablePropagationStatus defines the observed state of TransitRouterRouteTablePropagation.
type TransitRouterRouteTablePropagationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TransitRouterRouteTablePropagationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TransitRouterRouteTablePropagation is the Schema for the TransitRouterRouteTablePropagations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type TransitRouterRouteTablePropagation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TransitRouterRouteTablePropagationSpec   `json:"spec"`
	Status            TransitRouterRouteTablePropagationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TransitRouterRouteTablePropagationList contains a list of TransitRouterRouteTablePropagations
type TransitRouterRouteTablePropagationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TransitRouterRouteTablePropagation `json:"items"`
}

// Repository type metadata.
var (
	TransitRouterRouteTablePropagation_Kind             = "TransitRouterRouteTablePropagation"
	TransitRouterRouteTablePropagation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TransitRouterRouteTablePropagation_Kind}.String()
	TransitRouterRouteTablePropagation_KindAPIVersion   = TransitRouterRouteTablePropagation_Kind + "." + CRDGroupVersion.String()
	TransitRouterRouteTablePropagation_GroupVersionKind = CRDGroupVersion.WithKind(TransitRouterRouteTablePropagation_Kind)
)

func init() {
	SchemeBuilder.Register(&TransitRouterRouteTablePropagation{}, &TransitRouterRouteTablePropagationList{})
}
