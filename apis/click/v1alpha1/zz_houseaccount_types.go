/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HouseAccountObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type HouseAccountParameters struct {

	// +kubebuilder:validation:Optional
	AccountDescription *string `json:"accountDescription,omitempty" tf:"account_description,omitempty"`

	// +kubebuilder:validation:Required
	AccountName *string `json:"accountName" tf:"account_name,omitempty"`

	// +kubebuilder:validation:Required
	AccountPassword *string `json:"accountPassword" tf:"account_password,omitempty"`

	// +kubebuilder:validation:Required
	DBClusterID *string `json:"dbClusterId" tf:"db_cluster_id,omitempty"`
}

// HouseAccountSpec defines the desired state of HouseAccount
type HouseAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HouseAccountParameters `json:"forProvider"`
}

// HouseAccountStatus defines the observed state of HouseAccount.
type HouseAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HouseAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HouseAccount is the Schema for the HouseAccounts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type HouseAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HouseAccountSpec   `json:"spec"`
	Status            HouseAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HouseAccountList contains a list of HouseAccounts
type HouseAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HouseAccount `json:"items"`
}

// Repository type metadata.
var (
	HouseAccount_Kind             = "HouseAccount"
	HouseAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HouseAccount_Kind}.String()
	HouseAccount_KindAPIVersion   = HouseAccount_Kind + "." + CRDGroupVersion.String()
	HouseAccount_GroupVersionKind = CRDGroupVersion.WithKind(HouseAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&HouseAccount{}, &HouseAccountList{})
}
