/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConnectNetworkAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ConnectNetworkAttachmentParameters struct {

	// +kubebuilder:validation:Required
	CcnID *string `json:"ccnId" tf:"ccn_id,omitempty"`

	// +kubebuilder:validation:Required
	SagID *string `json:"sagId" tf:"sag_id,omitempty"`
}

// ConnectNetworkAttachmentSpec defines the desired state of ConnectNetworkAttachment
type ConnectNetworkAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ConnectNetworkAttachmentParameters `json:"forProvider"`
}

// ConnectNetworkAttachmentStatus defines the observed state of ConnectNetworkAttachment.
type ConnectNetworkAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ConnectNetworkAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ConnectNetworkAttachment is the Schema for the ConnectNetworkAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type ConnectNetworkAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ConnectNetworkAttachmentSpec   `json:"spec"`
	Status            ConnectNetworkAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ConnectNetworkAttachmentList contains a list of ConnectNetworkAttachments
type ConnectNetworkAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ConnectNetworkAttachment `json:"items"`
}

// Repository type metadata.
var (
	ConnectNetworkAttachment_Kind             = "ConnectNetworkAttachment"
	ConnectNetworkAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ConnectNetworkAttachment_Kind}.String()
	ConnectNetworkAttachment_KindAPIVersion   = ConnectNetworkAttachment_Kind + "." + CRDGroupVersion.String()
	ConnectNetworkAttachment_GroupVersionKind = CRDGroupVersion.WithKind(ConnectNetworkAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&ConnectNetworkAttachment{}, &ConnectNetworkAttachmentList{})
}
