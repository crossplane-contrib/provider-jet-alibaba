/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FirewallControlPolicyObservation struct {
	ACLUUID *string `json:"aclUuid,omitempty" tf:"acl_uuid,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type FirewallControlPolicyParameters struct {

	// +kubebuilder:validation:Required
	ACLAction *string `json:"aclAction" tf:"acl_action,omitempty"`

	// +kubebuilder:validation:Required
	ApplicationName *string `json:"applicationName" tf:"application_name,omitempty"`

	// +kubebuilder:validation:Required
	Description *string `json:"description" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	DestPort *string `json:"destPort,omitempty" tf:"dest_port,omitempty"`

	// +kubebuilder:validation:Optional
	DestPortGroup *string `json:"destPortGroup,omitempty" tf:"dest_port_group,omitempty"`

	// +kubebuilder:validation:Optional
	DestPortType *string `json:"destPortType,omitempty" tf:"dest_port_type,omitempty"`

	// +kubebuilder:validation:Required
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// +kubebuilder:validation:Required
	DestinationType *string `json:"destinationType" tf:"destination_type,omitempty"`

	// +kubebuilder:validation:Required
	Direction *string `json:"direction" tf:"direction,omitempty"`

	// +kubebuilder:validation:Optional
	IPVersion *string `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// +kubebuilder:validation:Optional
	Lang *string `json:"lang,omitempty" tf:"lang,omitempty"`

	// +kubebuilder:validation:Required
	Proto *string `json:"proto" tf:"proto,omitempty"`

	// +kubebuilder:validation:Optional
	Release *string `json:"release,omitempty" tf:"release,omitempty"`

	// +kubebuilder:validation:Required
	Source *string `json:"source" tf:"source,omitempty"`

	// +kubebuilder:validation:Optional
	SourceIP *string `json:"sourceIp,omitempty" tf:"source_ip,omitempty"`

	// +kubebuilder:validation:Required
	SourceType *string `json:"sourceType" tf:"source_type,omitempty"`
}

// FirewallControlPolicySpec defines the desired state of FirewallControlPolicy
type FirewallControlPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FirewallControlPolicyParameters `json:"forProvider"`
}

// FirewallControlPolicyStatus defines the observed state of FirewallControlPolicy.
type FirewallControlPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FirewallControlPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallControlPolicy is the Schema for the FirewallControlPolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type FirewallControlPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallControlPolicySpec   `json:"spec"`
	Status            FirewallControlPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallControlPolicyList contains a list of FirewallControlPolicys
type FirewallControlPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirewallControlPolicy `json:"items"`
}

// Repository type metadata.
var (
	FirewallControlPolicy_Kind             = "FirewallControlPolicy"
	FirewallControlPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FirewallControlPolicy_Kind}.String()
	FirewallControlPolicy_KindAPIVersion   = FirewallControlPolicy_Kind + "." + CRDGroupVersion.String()
	FirewallControlPolicy_GroupVersionKind = CRDGroupVersion.WithKind(FirewallControlPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&FirewallControlPolicy{}, &FirewallControlPolicyList{})
}
