/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this ConnectNetwork.
func (mg *ConnectNetwork) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ConnectNetwork.
func (mg *ConnectNetwork) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ConnectNetwork.
func (mg *ConnectNetwork) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ConnectNetwork.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ConnectNetwork) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ConnectNetwork.
func (mg *ConnectNetwork) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ConnectNetwork.
func (mg *ConnectNetwork) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ConnectNetwork.
func (mg *ConnectNetwork) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ConnectNetwork.
func (mg *ConnectNetwork) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ConnectNetwork.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ConnectNetwork) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ConnectNetwork.
func (mg *ConnectNetwork) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ConnectNetworkAttachment.
func (mg *ConnectNetworkAttachment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ConnectNetworkAttachment.
func (mg *ConnectNetworkAttachment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ConnectNetworkAttachment.
func (mg *ConnectNetworkAttachment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ConnectNetworkAttachment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ConnectNetworkAttachment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ConnectNetworkAttachment.
func (mg *ConnectNetworkAttachment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ConnectNetworkAttachment.
func (mg *ConnectNetworkAttachment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ConnectNetworkAttachment.
func (mg *ConnectNetworkAttachment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ConnectNetworkAttachment.
func (mg *ConnectNetworkAttachment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ConnectNetworkAttachment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ConnectNetworkAttachment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ConnectNetworkAttachment.
func (mg *ConnectNetworkAttachment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ConnectNetworkGrant.
func (mg *ConnectNetworkGrant) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ConnectNetworkGrant.
func (mg *ConnectNetworkGrant) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ConnectNetworkGrant.
func (mg *ConnectNetworkGrant) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ConnectNetworkGrant.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ConnectNetworkGrant) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ConnectNetworkGrant.
func (mg *ConnectNetworkGrant) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ConnectNetworkGrant.
func (mg *ConnectNetworkGrant) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ConnectNetworkGrant.
func (mg *ConnectNetworkGrant) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ConnectNetworkGrant.
func (mg *ConnectNetworkGrant) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ConnectNetworkGrant.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ConnectNetworkGrant) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ConnectNetworkGrant.
func (mg *ConnectNetworkGrant) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FirewallControlPolicy.
func (mg *FirewallControlPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FirewallControlPolicy.
func (mg *FirewallControlPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FirewallControlPolicy.
func (mg *FirewallControlPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FirewallControlPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FirewallControlPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FirewallControlPolicy.
func (mg *FirewallControlPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FirewallControlPolicy.
func (mg *FirewallControlPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FirewallControlPolicy.
func (mg *FirewallControlPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FirewallControlPolicy.
func (mg *FirewallControlPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FirewallControlPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FirewallControlPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FirewallControlPolicy.
func (mg *FirewallControlPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FirewallControlPolicyOrder.
func (mg *FirewallControlPolicyOrder) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FirewallControlPolicyOrder.
func (mg *FirewallControlPolicyOrder) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FirewallControlPolicyOrder.
func (mg *FirewallControlPolicyOrder) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FirewallControlPolicyOrder.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FirewallControlPolicyOrder) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FirewallControlPolicyOrder.
func (mg *FirewallControlPolicyOrder) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FirewallControlPolicyOrder.
func (mg *FirewallControlPolicyOrder) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FirewallControlPolicyOrder.
func (mg *FirewallControlPolicyOrder) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FirewallControlPolicyOrder.
func (mg *FirewallControlPolicyOrder) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FirewallControlPolicyOrder.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FirewallControlPolicyOrder) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FirewallControlPolicyOrder.
func (mg *FirewallControlPolicyOrder) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this FirewallInstance.
func (mg *FirewallInstance) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this FirewallInstance.
func (mg *FirewallInstance) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this FirewallInstance.
func (mg *FirewallInstance) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this FirewallInstance.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *FirewallInstance) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this FirewallInstance.
func (mg *FirewallInstance) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this FirewallInstance.
func (mg *FirewallInstance) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this FirewallInstance.
func (mg *FirewallInstance) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this FirewallInstance.
func (mg *FirewallInstance) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this FirewallInstance.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *FirewallInstance) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this FirewallInstance.
func (mg *FirewallInstance) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoAccessAssignment.
func (mg *SsoAccessAssignment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoAccessAssignment.
func (mg *SsoAccessAssignment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoAccessAssignment.
func (mg *SsoAccessAssignment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoAccessAssignment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoAccessAssignment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoAccessAssignment.
func (mg *SsoAccessAssignment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoAccessAssignment.
func (mg *SsoAccessAssignment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoAccessAssignment.
func (mg *SsoAccessAssignment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoAccessAssignment.
func (mg *SsoAccessAssignment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoAccessAssignment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoAccessAssignment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoAccessAssignment.
func (mg *SsoAccessAssignment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoAccessConfiguration.
func (mg *SsoAccessConfiguration) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoAccessConfiguration.
func (mg *SsoAccessConfiguration) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoAccessConfiguration.
func (mg *SsoAccessConfiguration) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoAccessConfiguration.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoAccessConfiguration) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoAccessConfiguration.
func (mg *SsoAccessConfiguration) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoAccessConfiguration.
func (mg *SsoAccessConfiguration) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoAccessConfiguration.
func (mg *SsoAccessConfiguration) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoAccessConfiguration.
func (mg *SsoAccessConfiguration) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoAccessConfiguration.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoAccessConfiguration) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoAccessConfiguration.
func (mg *SsoAccessConfiguration) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoAccessConfigurationProvisioning.
func (mg *SsoAccessConfigurationProvisioning) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoAccessConfigurationProvisioning.
func (mg *SsoAccessConfigurationProvisioning) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoAccessConfigurationProvisioning.
func (mg *SsoAccessConfigurationProvisioning) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoAccessConfigurationProvisioning.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoAccessConfigurationProvisioning) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoAccessConfigurationProvisioning.
func (mg *SsoAccessConfigurationProvisioning) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoAccessConfigurationProvisioning.
func (mg *SsoAccessConfigurationProvisioning) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoAccessConfigurationProvisioning.
func (mg *SsoAccessConfigurationProvisioning) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoAccessConfigurationProvisioning.
func (mg *SsoAccessConfigurationProvisioning) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoAccessConfigurationProvisioning.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoAccessConfigurationProvisioning) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoAccessConfigurationProvisioning.
func (mg *SsoAccessConfigurationProvisioning) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoDirectory.
func (mg *SsoDirectory) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoDirectory.
func (mg *SsoDirectory) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoDirectory.
func (mg *SsoDirectory) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoDirectory.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoDirectory) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoDirectory.
func (mg *SsoDirectory) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoDirectory.
func (mg *SsoDirectory) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoDirectory.
func (mg *SsoDirectory) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoDirectory.
func (mg *SsoDirectory) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoDirectory.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoDirectory) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoDirectory.
func (mg *SsoDirectory) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoGroup.
func (mg *SsoGroup) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoGroup.
func (mg *SsoGroup) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoGroup.
func (mg *SsoGroup) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoGroup.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoGroup) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoGroup.
func (mg *SsoGroup) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoGroup.
func (mg *SsoGroup) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoGroup.
func (mg *SsoGroup) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoGroup.
func (mg *SsoGroup) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoGroup.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoGroup) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoGroup.
func (mg *SsoGroup) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoScimServerCredential.
func (mg *SsoScimServerCredential) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoScimServerCredential.
func (mg *SsoScimServerCredential) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoScimServerCredential.
func (mg *SsoScimServerCredential) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoScimServerCredential.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoScimServerCredential) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoScimServerCredential.
func (mg *SsoScimServerCredential) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoScimServerCredential.
func (mg *SsoScimServerCredential) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoScimServerCredential.
func (mg *SsoScimServerCredential) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoScimServerCredential.
func (mg *SsoScimServerCredential) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoScimServerCredential.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoScimServerCredential) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoScimServerCredential.
func (mg *SsoScimServerCredential) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoUser.
func (mg *SsoUser) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoUser.
func (mg *SsoUser) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoUser.
func (mg *SsoUser) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoUser.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoUser) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoUser.
func (mg *SsoUser) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoUser.
func (mg *SsoUser) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoUser.
func (mg *SsoUser) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoUser.
func (mg *SsoUser) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoUser.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoUser) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoUser.
func (mg *SsoUser) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SsoUserAttachment.
func (mg *SsoUserAttachment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SsoUserAttachment.
func (mg *SsoUserAttachment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this SsoUserAttachment.
func (mg *SsoUserAttachment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this SsoUserAttachment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *SsoUserAttachment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this SsoUserAttachment.
func (mg *SsoUserAttachment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SsoUserAttachment.
func (mg *SsoUserAttachment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SsoUserAttachment.
func (mg *SsoUserAttachment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this SsoUserAttachment.
func (mg *SsoUserAttachment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this SsoUserAttachment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *SsoUserAttachment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this SsoUserAttachment.
func (mg *SsoUserAttachment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StorageGatewayExpressSync.
func (mg *StorageGatewayExpressSync) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StorageGatewayExpressSync.
func (mg *StorageGatewayExpressSync) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StorageGatewayExpressSync.
func (mg *StorageGatewayExpressSync) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StorageGatewayExpressSync.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StorageGatewayExpressSync) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StorageGatewayExpressSync.
func (mg *StorageGatewayExpressSync) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StorageGatewayExpressSync.
func (mg *StorageGatewayExpressSync) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StorageGatewayExpressSync.
func (mg *StorageGatewayExpressSync) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StorageGatewayExpressSync.
func (mg *StorageGatewayExpressSync) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StorageGatewayExpressSync.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StorageGatewayExpressSync) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StorageGatewayExpressSync.
func (mg *StorageGatewayExpressSync) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StorageGatewayExpressSyncShareAttachment.
func (mg *StorageGatewayExpressSyncShareAttachment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StorageGatewayExpressSyncShareAttachment.
func (mg *StorageGatewayExpressSyncShareAttachment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StorageGatewayExpressSyncShareAttachment.
func (mg *StorageGatewayExpressSyncShareAttachment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StorageGatewayExpressSyncShareAttachment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StorageGatewayExpressSyncShareAttachment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StorageGatewayExpressSyncShareAttachment.
func (mg *StorageGatewayExpressSyncShareAttachment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StorageGatewayExpressSyncShareAttachment.
func (mg *StorageGatewayExpressSyncShareAttachment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StorageGatewayExpressSyncShareAttachment.
func (mg *StorageGatewayExpressSyncShareAttachment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StorageGatewayExpressSyncShareAttachment.
func (mg *StorageGatewayExpressSyncShareAttachment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StorageGatewayExpressSyncShareAttachment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StorageGatewayExpressSyncShareAttachment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StorageGatewayExpressSyncShareAttachment.
func (mg *StorageGatewayExpressSyncShareAttachment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StorageGatewayGateway.
func (mg *StorageGatewayGateway) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StorageGatewayGateway.
func (mg *StorageGatewayGateway) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StorageGatewayGateway.
func (mg *StorageGatewayGateway) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StorageGatewayGateway.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StorageGatewayGateway) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StorageGatewayGateway.
func (mg *StorageGatewayGateway) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StorageGatewayGateway.
func (mg *StorageGatewayGateway) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StorageGatewayGateway.
func (mg *StorageGatewayGateway) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StorageGatewayGateway.
func (mg *StorageGatewayGateway) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StorageGatewayGateway.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StorageGatewayGateway) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StorageGatewayGateway.
func (mg *StorageGatewayGateway) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StorageGatewayGatewayBlockVolume.
func (mg *StorageGatewayGatewayBlockVolume) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StorageGatewayGatewayBlockVolume.
func (mg *StorageGatewayGatewayBlockVolume) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StorageGatewayGatewayBlockVolume.
func (mg *StorageGatewayGatewayBlockVolume) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StorageGatewayGatewayBlockVolume.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StorageGatewayGatewayBlockVolume) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StorageGatewayGatewayBlockVolume.
func (mg *StorageGatewayGatewayBlockVolume) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StorageGatewayGatewayBlockVolume.
func (mg *StorageGatewayGatewayBlockVolume) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StorageGatewayGatewayBlockVolume.
func (mg *StorageGatewayGatewayBlockVolume) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StorageGatewayGatewayBlockVolume.
func (mg *StorageGatewayGatewayBlockVolume) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StorageGatewayGatewayBlockVolume.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StorageGatewayGatewayBlockVolume) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StorageGatewayGatewayBlockVolume.
func (mg *StorageGatewayGatewayBlockVolume) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StorageGatewayGatewayCacheDisk.
func (mg *StorageGatewayGatewayCacheDisk) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StorageGatewayGatewayCacheDisk.
func (mg *StorageGatewayGatewayCacheDisk) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StorageGatewayGatewayCacheDisk.
func (mg *StorageGatewayGatewayCacheDisk) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StorageGatewayGatewayCacheDisk.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StorageGatewayGatewayCacheDisk) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StorageGatewayGatewayCacheDisk.
func (mg *StorageGatewayGatewayCacheDisk) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StorageGatewayGatewayCacheDisk.
func (mg *StorageGatewayGatewayCacheDisk) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StorageGatewayGatewayCacheDisk.
func (mg *StorageGatewayGatewayCacheDisk) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StorageGatewayGatewayCacheDisk.
func (mg *StorageGatewayGatewayCacheDisk) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StorageGatewayGatewayCacheDisk.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StorageGatewayGatewayCacheDisk) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StorageGatewayGatewayCacheDisk.
func (mg *StorageGatewayGatewayCacheDisk) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StorageGatewayGatewayFileShare.
func (mg *StorageGatewayGatewayFileShare) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StorageGatewayGatewayFileShare.
func (mg *StorageGatewayGatewayFileShare) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StorageGatewayGatewayFileShare.
func (mg *StorageGatewayGatewayFileShare) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StorageGatewayGatewayFileShare.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StorageGatewayGatewayFileShare) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StorageGatewayGatewayFileShare.
func (mg *StorageGatewayGatewayFileShare) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StorageGatewayGatewayFileShare.
func (mg *StorageGatewayGatewayFileShare) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StorageGatewayGatewayFileShare.
func (mg *StorageGatewayGatewayFileShare) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StorageGatewayGatewayFileShare.
func (mg *StorageGatewayGatewayFileShare) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StorageGatewayGatewayFileShare.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StorageGatewayGatewayFileShare) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StorageGatewayGatewayFileShare.
func (mg *StorageGatewayGatewayFileShare) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StorageGatewayGatewayLogging.
func (mg *StorageGatewayGatewayLogging) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StorageGatewayGatewayLogging.
func (mg *StorageGatewayGatewayLogging) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StorageGatewayGatewayLogging.
func (mg *StorageGatewayGatewayLogging) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StorageGatewayGatewayLogging.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StorageGatewayGatewayLogging) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StorageGatewayGatewayLogging.
func (mg *StorageGatewayGatewayLogging) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StorageGatewayGatewayLogging.
func (mg *StorageGatewayGatewayLogging) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StorageGatewayGatewayLogging.
func (mg *StorageGatewayGatewayLogging) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StorageGatewayGatewayLogging.
func (mg *StorageGatewayGatewayLogging) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StorageGatewayGatewayLogging.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StorageGatewayGatewayLogging) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StorageGatewayGatewayLogging.
func (mg *StorageGatewayGatewayLogging) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StorageGatewayGatewaySMBUser.
func (mg *StorageGatewayGatewaySMBUser) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StorageGatewayGatewaySMBUser.
func (mg *StorageGatewayGatewaySMBUser) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StorageGatewayGatewaySMBUser.
func (mg *StorageGatewayGatewaySMBUser) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StorageGatewayGatewaySMBUser.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StorageGatewayGatewaySMBUser) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StorageGatewayGatewaySMBUser.
func (mg *StorageGatewayGatewaySMBUser) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StorageGatewayGatewaySMBUser.
func (mg *StorageGatewayGatewaySMBUser) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StorageGatewayGatewaySMBUser.
func (mg *StorageGatewayGatewaySMBUser) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StorageGatewayGatewaySMBUser.
func (mg *StorageGatewayGatewaySMBUser) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StorageGatewayGatewaySMBUser.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StorageGatewayGatewaySMBUser) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StorageGatewayGatewaySMBUser.
func (mg *StorageGatewayGatewaySMBUser) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this StorageGatewayStorageBundle.
func (mg *StorageGatewayStorageBundle) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this StorageGatewayStorageBundle.
func (mg *StorageGatewayStorageBundle) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this StorageGatewayStorageBundle.
func (mg *StorageGatewayStorageBundle) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this StorageGatewayStorageBundle.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *StorageGatewayStorageBundle) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this StorageGatewayStorageBundle.
func (mg *StorageGatewayStorageBundle) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this StorageGatewayStorageBundle.
func (mg *StorageGatewayStorageBundle) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this StorageGatewayStorageBundle.
func (mg *StorageGatewayStorageBundle) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this StorageGatewayStorageBundle.
func (mg *StorageGatewayStorageBundle) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this StorageGatewayStorageBundle.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *StorageGatewayStorageBundle) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this StorageGatewayStorageBundle.
func (mg *StorageGatewayStorageBundle) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
