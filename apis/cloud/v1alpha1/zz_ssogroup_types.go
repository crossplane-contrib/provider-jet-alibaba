/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SsoGroupObservation struct {
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SsoGroupParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	DirectoryID *string `json:"directoryId" tf:"directory_id,omitempty"`

	// +kubebuilder:validation:Required
	GroupName *string `json:"groupName" tf:"group_name,omitempty"`
}

// SsoGroupSpec defines the desired state of SsoGroup
type SsoGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SsoGroupParameters `json:"forProvider"`
}

// SsoGroupStatus defines the observed state of SsoGroup.
type SsoGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SsoGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SsoGroup is the Schema for the SsoGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type SsoGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SsoGroupSpec   `json:"spec"`
	Status            SsoGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SsoGroupList contains a list of SsoGroups
type SsoGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SsoGroup `json:"items"`
}

// Repository type metadata.
var (
	SsoGroup_Kind             = "SsoGroup"
	SsoGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SsoGroup_Kind}.String()
	SsoGroup_KindAPIVersion   = SsoGroup_Kind + "." + CRDGroupVersion.String()
	SsoGroup_GroupVersionKind = CRDGroupVersion.WithKind(SsoGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&SsoGroup{}, &SsoGroupList{})
}
