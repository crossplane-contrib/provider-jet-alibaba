/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SsoUserAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SsoUserAttachmentParameters struct {

	// +kubebuilder:validation:Required
	DirectoryID *string `json:"directoryId" tf:"directory_id,omitempty"`

	// +kubebuilder:validation:Required
	GroupID *string `json:"groupId" tf:"group_id,omitempty"`

	// +kubebuilder:validation:Required
	UserID *string `json:"userId" tf:"user_id,omitempty"`
}

// SsoUserAttachmentSpec defines the desired state of SsoUserAttachment
type SsoUserAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SsoUserAttachmentParameters `json:"forProvider"`
}

// SsoUserAttachmentStatus defines the observed state of SsoUserAttachment.
type SsoUserAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SsoUserAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SsoUserAttachment is the Schema for the SsoUserAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type SsoUserAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SsoUserAttachmentSpec   `json:"spec"`
	Status            SsoUserAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SsoUserAttachmentList contains a list of SsoUserAttachments
type SsoUserAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SsoUserAttachment `json:"items"`
}

// Repository type metadata.
var (
	SsoUserAttachment_Kind             = "SsoUserAttachment"
	SsoUserAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SsoUserAttachment_Kind}.String()
	SsoUserAttachment_KindAPIVersion   = SsoUserAttachment_Kind + "." + CRDGroupVersion.String()
	SsoUserAttachment_GroupVersionKind = CRDGroupVersion.WithKind(SsoUserAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&SsoUserAttachment{}, &SsoUserAttachmentList{})
}
