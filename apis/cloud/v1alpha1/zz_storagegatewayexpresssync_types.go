/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type StorageGatewayExpressSyncObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type StorageGatewayExpressSyncParameters struct {

	// +kubebuilder:validation:Required
	BucketName *string `json:"bucketName" tf:"bucket_name,omitempty"`

	// +kubebuilder:validation:Optional
	BucketPrefix *string `json:"bucketPrefix,omitempty" tf:"bucket_prefix,omitempty"`

	// +kubebuilder:validation:Required
	BucketRegion *string `json:"bucketRegion" tf:"bucket_region,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	ExpressSyncName *string `json:"expressSyncName" tf:"express_sync_name,omitempty"`
}

// StorageGatewayExpressSyncSpec defines the desired state of StorageGatewayExpressSync
type StorageGatewayExpressSyncSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     StorageGatewayExpressSyncParameters `json:"forProvider"`
}

// StorageGatewayExpressSyncStatus defines the observed state of StorageGatewayExpressSync.
type StorageGatewayExpressSyncStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        StorageGatewayExpressSyncObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// StorageGatewayExpressSync is the Schema for the StorageGatewayExpressSyncs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type StorageGatewayExpressSync struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              StorageGatewayExpressSyncSpec   `json:"spec"`
	Status            StorageGatewayExpressSyncStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// StorageGatewayExpressSyncList contains a list of StorageGatewayExpressSyncs
type StorageGatewayExpressSyncList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []StorageGatewayExpressSync `json:"items"`
}

// Repository type metadata.
var (
	StorageGatewayExpressSync_Kind             = "StorageGatewayExpressSync"
	StorageGatewayExpressSync_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: StorageGatewayExpressSync_Kind}.String()
	StorageGatewayExpressSync_KindAPIVersion   = StorageGatewayExpressSync_Kind + "." + CRDGroupVersion.String()
	StorageGatewayExpressSync_GroupVersionKind = CRDGroupVersion.WithKind(StorageGatewayExpressSync_Kind)
)

func init() {
	SchemeBuilder.Register(&StorageGatewayExpressSync{}, &StorageGatewayExpressSyncList{})
}
