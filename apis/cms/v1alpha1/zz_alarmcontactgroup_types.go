/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlarmContactGroupObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AlarmContactGroupParameters struct {

	// +kubebuilder:validation:Required
	AlarmContactGroupName *string `json:"alarmContactGroupName" tf:"alarm_contact_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	Contacts []*string `json:"contacts,omitempty" tf:"contacts,omitempty"`

	// +kubebuilder:validation:Optional
	Describe *string `json:"describe,omitempty" tf:"describe,omitempty"`

	// +kubebuilder:validation:Optional
	EnableSubscribed *bool `json:"enableSubscribed,omitempty" tf:"enable_subscribed,omitempty"`
}

// AlarmContactGroupSpec defines the desired state of AlarmContactGroup
type AlarmContactGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AlarmContactGroupParameters `json:"forProvider"`
}

// AlarmContactGroupStatus defines the observed state of AlarmContactGroup.
type AlarmContactGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AlarmContactGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AlarmContactGroup is the Schema for the AlarmContactGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type AlarmContactGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AlarmContactGroupSpec   `json:"spec"`
	Status            AlarmContactGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AlarmContactGroupList contains a list of AlarmContactGroups
type AlarmContactGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AlarmContactGroup `json:"items"`
}

// Repository type metadata.
var (
	AlarmContactGroup_Kind             = "AlarmContactGroup"
	AlarmContactGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AlarmContactGroup_Kind}.String()
	AlarmContactGroup_KindAPIVersion   = AlarmContactGroup_Kind + "." + CRDGroupVersion.String()
	AlarmContactGroup_GroupVersionKind = CRDGroupVersion.WithKind(AlarmContactGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&AlarmContactGroup{}, &AlarmContactGroupList{})
}
