//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerChannel) DeepCopyInto(out *ConsumerChannel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerChannel.
func (in *ConsumerChannel) DeepCopy() *ConsumerChannel {
	if in == nil {
		return nil
	}
	out := new(ConsumerChannel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsumerChannel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerChannelList) DeepCopyInto(out *ConsumerChannelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConsumerChannel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerChannelList.
func (in *ConsumerChannelList) DeepCopy() *ConsumerChannelList {
	if in == nil {
		return nil
	}
	out := new(ConsumerChannelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsumerChannelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerChannelObservation) DeepCopyInto(out *ConsumerChannelObservation) {
	*out = *in
	if in.ConsumerGroupID != nil {
		in, out := &in.ConsumerGroupID, &out.ConsumerGroupID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerChannelObservation.
func (in *ConsumerChannelObservation) DeepCopy() *ConsumerChannelObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumerChannelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerChannelParameters) DeepCopyInto(out *ConsumerChannelParameters) {
	*out = *in
	if in.ConsumerGroupName != nil {
		in, out := &in.ConsumerGroupName, &out.ConsumerGroupName
		*out = new(string)
		**out = **in
	}
	if in.ConsumerGroupPassword != nil {
		in, out := &in.ConsumerGroupPassword, &out.ConsumerGroupPassword
		*out = new(string)
		**out = **in
	}
	if in.ConsumerGroupUserName != nil {
		in, out := &in.ConsumerGroupUserName, &out.ConsumerGroupUserName
		*out = new(string)
		**out = **in
	}
	if in.DtsInstanceID != nil {
		in, out := &in.DtsInstanceID, &out.DtsInstanceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerChannelParameters.
func (in *ConsumerChannelParameters) DeepCopy() *ConsumerChannelParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumerChannelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerChannelSpec) DeepCopyInto(out *ConsumerChannelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerChannelSpec.
func (in *ConsumerChannelSpec) DeepCopy() *ConsumerChannelSpec {
	if in == nil {
		return nil
	}
	out := new(ConsumerChannelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerChannelStatus) DeepCopyInto(out *ConsumerChannelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerChannelStatus.
func (in *ConsumerChannelStatus) DeepCopy() *ConsumerChannelStatus {
	if in == nil {
		return nil
	}
	out := new(ConsumerChannelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobMonitorRule) DeepCopyInto(out *JobMonitorRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobMonitorRule.
func (in *JobMonitorRule) DeepCopy() *JobMonitorRule {
	if in == nil {
		return nil
	}
	out := new(JobMonitorRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobMonitorRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobMonitorRuleList) DeepCopyInto(out *JobMonitorRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]JobMonitorRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobMonitorRuleList.
func (in *JobMonitorRuleList) DeepCopy() *JobMonitorRuleList {
	if in == nil {
		return nil
	}
	out := new(JobMonitorRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobMonitorRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobMonitorRuleObservation) DeepCopyInto(out *JobMonitorRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobMonitorRuleObservation.
func (in *JobMonitorRuleObservation) DeepCopy() *JobMonitorRuleObservation {
	if in == nil {
		return nil
	}
	out := new(JobMonitorRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobMonitorRuleParameters) DeepCopyInto(out *JobMonitorRuleParameters) {
	*out = *in
	if in.DelayRuleTime != nil {
		in, out := &in.DelayRuleTime, &out.DelayRuleTime
		*out = new(string)
		**out = **in
	}
	if in.DtsJobID != nil {
		in, out := &in.DtsJobID, &out.DtsJobID
		*out = new(string)
		**out = **in
	}
	if in.Phone != nil {
		in, out := &in.Phone, &out.Phone
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobMonitorRuleParameters.
func (in *JobMonitorRuleParameters) DeepCopy() *JobMonitorRuleParameters {
	if in == nil {
		return nil
	}
	out := new(JobMonitorRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobMonitorRuleSpec) DeepCopyInto(out *JobMonitorRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobMonitorRuleSpec.
func (in *JobMonitorRuleSpec) DeepCopy() *JobMonitorRuleSpec {
	if in == nil {
		return nil
	}
	out := new(JobMonitorRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobMonitorRuleStatus) DeepCopyInto(out *JobMonitorRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobMonitorRuleStatus.
func (in *JobMonitorRuleStatus) DeepCopy() *JobMonitorRuleStatus {
	if in == nil {
		return nil
	}
	out := new(JobMonitorRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationInstance) DeepCopyInto(out *MigrationInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationInstance.
func (in *MigrationInstance) DeepCopy() *MigrationInstance {
	if in == nil {
		return nil
	}
	out := new(MigrationInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationInstanceList) DeepCopyInto(out *MigrationInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MigrationInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationInstanceList.
func (in *MigrationInstanceList) DeepCopy() *MigrationInstanceList {
	if in == nil {
		return nil
	}
	out := new(MigrationInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationInstanceObservation) DeepCopyInto(out *MigrationInstanceObservation) {
	*out = *in
	if in.DtsInstanceID != nil {
		in, out := &in.DtsInstanceID, &out.DtsInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationInstanceObservation.
func (in *MigrationInstanceObservation) DeepCopy() *MigrationInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(MigrationInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationInstanceParameters) DeepCopyInto(out *MigrationInstanceParameters) {
	*out = *in
	if in.ComputeUnit != nil {
		in, out := &in.ComputeUnit, &out.ComputeUnit
		*out = new(float64)
		**out = **in
	}
	if in.DatabaseCount != nil {
		in, out := &in.DatabaseCount, &out.DatabaseCount
		*out = new(float64)
		**out = **in
	}
	if in.DestinationEndpointEngineName != nil {
		in, out := &in.DestinationEndpointEngineName, &out.DestinationEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointRegion != nil {
		in, out := &in.DestinationEndpointRegion, &out.DestinationEndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.PaymentType != nil {
		in, out := &in.PaymentType, &out.PaymentType
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointEngineName != nil {
		in, out := &in.SourceEndpointEngineName, &out.SourceEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointRegion != nil {
		in, out := &in.SourceEndpointRegion, &out.SourceEndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.SyncArchitecture != nil {
		in, out := &in.SyncArchitecture, &out.SyncArchitecture
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationInstanceParameters.
func (in *MigrationInstanceParameters) DeepCopy() *MigrationInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(MigrationInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationInstanceSpec) DeepCopyInto(out *MigrationInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationInstanceSpec.
func (in *MigrationInstanceSpec) DeepCopy() *MigrationInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(MigrationInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationInstanceStatus) DeepCopyInto(out *MigrationInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationInstanceStatus.
func (in *MigrationInstanceStatus) DeepCopy() *MigrationInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(MigrationInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJob) DeepCopyInto(out *MigrationJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJob.
func (in *MigrationJob) DeepCopy() *MigrationJob {
	if in == nil {
		return nil
	}
	out := new(MigrationJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobList) DeepCopyInto(out *MigrationJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MigrationJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobList.
func (in *MigrationJobList) DeepCopy() *MigrationJobList {
	if in == nil {
		return nil
	}
	out := new(MigrationJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MigrationJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobObservation) DeepCopyInto(out *MigrationJobObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobObservation.
func (in *MigrationJobObservation) DeepCopy() *MigrationJobObservation {
	if in == nil {
		return nil
	}
	out := new(MigrationJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobParameters) DeepCopyInto(out *MigrationJobParameters) {
	*out = *in
	if in.Checkpoint != nil {
		in, out := &in.Checkpoint, &out.Checkpoint
		*out = new(string)
		**out = **in
	}
	if in.DBList != nil {
		in, out := &in.DBList, &out.DBList
		*out = new(string)
		**out = **in
	}
	if in.DataInitialization != nil {
		in, out := &in.DataInitialization, &out.DataInitialization
		*out = new(bool)
		**out = **in
	}
	if in.DataSynchronization != nil {
		in, out := &in.DataSynchronization, &out.DataSynchronization
		*out = new(bool)
		**out = **in
	}
	if in.DestinationEndpointDatabaseName != nil {
		in, out := &in.DestinationEndpointDatabaseName, &out.DestinationEndpointDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointEngineName != nil {
		in, out := &in.DestinationEndpointEngineName, &out.DestinationEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointIP != nil {
		in, out := &in.DestinationEndpointIP, &out.DestinationEndpointIP
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointInstanceID != nil {
		in, out := &in.DestinationEndpointInstanceID, &out.DestinationEndpointInstanceID
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointInstanceType != nil {
		in, out := &in.DestinationEndpointInstanceType, &out.DestinationEndpointInstanceType
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointOracleSid != nil {
		in, out := &in.DestinationEndpointOracleSid, &out.DestinationEndpointOracleSid
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointPassword != nil {
		in, out := &in.DestinationEndpointPassword, &out.DestinationEndpointPassword
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointPort != nil {
		in, out := &in.DestinationEndpointPort, &out.DestinationEndpointPort
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointRegion != nil {
		in, out := &in.DestinationEndpointRegion, &out.DestinationEndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointUserName != nil {
		in, out := &in.DestinationEndpointUserName, &out.DestinationEndpointUserName
		*out = new(string)
		**out = **in
	}
	if in.DtsInstanceID != nil {
		in, out := &in.DtsInstanceID, &out.DtsInstanceID
		*out = new(string)
		**out = **in
	}
	if in.DtsJobName != nil {
		in, out := &in.DtsJobName, &out.DtsJobName
		*out = new(string)
		**out = **in
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointDatabaseName != nil {
		in, out := &in.SourceEndpointDatabaseName, &out.SourceEndpointDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointEngineName != nil {
		in, out := &in.SourceEndpointEngineName, &out.SourceEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointIP != nil {
		in, out := &in.SourceEndpointIP, &out.SourceEndpointIP
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointInstanceID != nil {
		in, out := &in.SourceEndpointInstanceID, &out.SourceEndpointInstanceID
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointInstanceType != nil {
		in, out := &in.SourceEndpointInstanceType, &out.SourceEndpointInstanceType
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointOracleSid != nil {
		in, out := &in.SourceEndpointOracleSid, &out.SourceEndpointOracleSid
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointOwnerID != nil {
		in, out := &in.SourceEndpointOwnerID, &out.SourceEndpointOwnerID
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointPassword != nil {
		in, out := &in.SourceEndpointPassword, &out.SourceEndpointPassword
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointPort != nil {
		in, out := &in.SourceEndpointPort, &out.SourceEndpointPort
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointRegion != nil {
		in, out := &in.SourceEndpointRegion, &out.SourceEndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointRole != nil {
		in, out := &in.SourceEndpointRole, &out.SourceEndpointRole
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointUserName != nil {
		in, out := &in.SourceEndpointUserName, &out.SourceEndpointUserName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StructureInitialization != nil {
		in, out := &in.StructureInitialization, &out.StructureInitialization
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobParameters.
func (in *MigrationJobParameters) DeepCopy() *MigrationJobParameters {
	if in == nil {
		return nil
	}
	out := new(MigrationJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobSpec) DeepCopyInto(out *MigrationJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobSpec.
func (in *MigrationJobSpec) DeepCopy() *MigrationJobSpec {
	if in == nil {
		return nil
	}
	out := new(MigrationJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationJobStatus) DeepCopyInto(out *MigrationJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationJobStatus.
func (in *MigrationJobStatus) DeepCopy() *MigrationJobStatus {
	if in == nil {
		return nil
	}
	out := new(MigrationJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionJob) DeepCopyInto(out *SubscriptionJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionJob.
func (in *SubscriptionJob) DeepCopy() *SubscriptionJob {
	if in == nil {
		return nil
	}
	out := new(SubscriptionJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionJobList) DeepCopyInto(out *SubscriptionJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubscriptionJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionJobList.
func (in *SubscriptionJobList) DeepCopy() *SubscriptionJobList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionJobObservation) DeepCopyInto(out *SubscriptionJobObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionJobObservation.
func (in *SubscriptionJobObservation) DeepCopy() *SubscriptionJobObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionJobParameters) DeepCopyInto(out *SubscriptionJobParameters) {
	*out = *in
	if in.Checkpoint != nil {
		in, out := &in.Checkpoint, &out.Checkpoint
		*out = new(string)
		**out = **in
	}
	if in.ComputeUnit != nil {
		in, out := &in.ComputeUnit, &out.ComputeUnit
		*out = new(float64)
		**out = **in
	}
	if in.DBList != nil {
		in, out := &in.DBList, &out.DBList
		*out = new(string)
		**out = **in
	}
	if in.DatabaseCount != nil {
		in, out := &in.DatabaseCount, &out.DatabaseCount
		*out = new(float64)
		**out = **in
	}
	if in.DelayNotice != nil {
		in, out := &in.DelayNotice, &out.DelayNotice
		*out = new(bool)
		**out = **in
	}
	if in.DelayPhone != nil {
		in, out := &in.DelayPhone, &out.DelayPhone
		*out = new(string)
		**out = **in
	}
	if in.DelayRuleTime != nil {
		in, out := &in.DelayRuleTime, &out.DelayRuleTime
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointEngineName != nil {
		in, out := &in.DestinationEndpointEngineName, &out.DestinationEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.DtsInstanceID != nil {
		in, out := &in.DtsInstanceID, &out.DtsInstanceID
		*out = new(string)
		**out = **in
	}
	if in.DtsJobName != nil {
		in, out := &in.DtsJobName, &out.DtsJobName
		*out = new(string)
		**out = **in
	}
	if in.ErrorNotice != nil {
		in, out := &in.ErrorNotice, &out.ErrorNotice
		*out = new(bool)
		**out = **in
	}
	if in.ErrorPhone != nil {
		in, out := &in.ErrorPhone, &out.ErrorPhone
		*out = new(string)
		**out = **in
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.PaymentDuration != nil {
		in, out := &in.PaymentDuration, &out.PaymentDuration
		*out = new(float64)
		**out = **in
	}
	if in.PaymentDurationUnit != nil {
		in, out := &in.PaymentDurationUnit, &out.PaymentDurationUnit
		*out = new(string)
		**out = **in
	}
	if in.PaymentType != nil {
		in, out := &in.PaymentType, &out.PaymentType
		*out = new(string)
		**out = **in
	}
	if in.Reserve != nil {
		in, out := &in.Reserve, &out.Reserve
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointDatabaseName != nil {
		in, out := &in.SourceEndpointDatabaseName, &out.SourceEndpointDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointEngineName != nil {
		in, out := &in.SourceEndpointEngineName, &out.SourceEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointIP != nil {
		in, out := &in.SourceEndpointIP, &out.SourceEndpointIP
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointInstanceID != nil {
		in, out := &in.SourceEndpointInstanceID, &out.SourceEndpointInstanceID
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointInstanceType != nil {
		in, out := &in.SourceEndpointInstanceType, &out.SourceEndpointInstanceType
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointOracleSid != nil {
		in, out := &in.SourceEndpointOracleSid, &out.SourceEndpointOracleSid
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointOwnerID != nil {
		in, out := &in.SourceEndpointOwnerID, &out.SourceEndpointOwnerID
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointPassword != nil {
		in, out := &in.SourceEndpointPassword, &out.SourceEndpointPassword
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointPort != nil {
		in, out := &in.SourceEndpointPort, &out.SourceEndpointPort
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointRegion != nil {
		in, out := &in.SourceEndpointRegion, &out.SourceEndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointRole != nil {
		in, out := &in.SourceEndpointRole, &out.SourceEndpointRole
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointUserName != nil {
		in, out := &in.SourceEndpointUserName, &out.SourceEndpointUserName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionDataTypeDdl != nil {
		in, out := &in.SubscriptionDataTypeDdl, &out.SubscriptionDataTypeDdl
		*out = new(bool)
		**out = **in
	}
	if in.SubscriptionDataTypeDml != nil {
		in, out := &in.SubscriptionDataTypeDml, &out.SubscriptionDataTypeDml
		*out = new(bool)
		**out = **in
	}
	if in.SubscriptionInstanceNetworkType != nil {
		in, out := &in.SubscriptionInstanceNetworkType, &out.SubscriptionInstanceNetworkType
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionInstanceVPCID != nil {
		in, out := &in.SubscriptionInstanceVPCID, &out.SubscriptionInstanceVPCID
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionInstanceVswitchID != nil {
		in, out := &in.SubscriptionInstanceVswitchID, &out.SubscriptionInstanceVswitchID
		*out = new(string)
		**out = **in
	}
	if in.SyncArchitecture != nil {
		in, out := &in.SyncArchitecture, &out.SyncArchitecture
		*out = new(string)
		**out = **in
	}
	if in.SynchronizationDirection != nil {
		in, out := &in.SynchronizationDirection, &out.SynchronizationDirection
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionJobParameters.
func (in *SubscriptionJobParameters) DeepCopy() *SubscriptionJobParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionJobSpec) DeepCopyInto(out *SubscriptionJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionJobSpec.
func (in *SubscriptionJobSpec) DeepCopy() *SubscriptionJobSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionJobStatus) DeepCopyInto(out *SubscriptionJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionJobStatus.
func (in *SubscriptionJobStatus) DeepCopy() *SubscriptionJobStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationInstance) DeepCopyInto(out *SynchronizationInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationInstance.
func (in *SynchronizationInstance) DeepCopy() *SynchronizationInstance {
	if in == nil {
		return nil
	}
	out := new(SynchronizationInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SynchronizationInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationInstanceList) DeepCopyInto(out *SynchronizationInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SynchronizationInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationInstanceList.
func (in *SynchronizationInstanceList) DeepCopy() *SynchronizationInstanceList {
	if in == nil {
		return nil
	}
	out := new(SynchronizationInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SynchronizationInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationInstanceObservation) DeepCopyInto(out *SynchronizationInstanceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationInstanceObservation.
func (in *SynchronizationInstanceObservation) DeepCopy() *SynchronizationInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(SynchronizationInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationInstanceParameters) DeepCopyInto(out *SynchronizationInstanceParameters) {
	*out = *in
	if in.ComputeUnit != nil {
		in, out := &in.ComputeUnit, &out.ComputeUnit
		*out = new(float64)
		**out = **in
	}
	if in.DatabaseCount != nil {
		in, out := &in.DatabaseCount, &out.DatabaseCount
		*out = new(float64)
		**out = **in
	}
	if in.DestinationEndpointEngineName != nil {
		in, out := &in.DestinationEndpointEngineName, &out.DestinationEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointRegion != nil {
		in, out := &in.DestinationEndpointRegion, &out.DestinationEndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.PaymentDuration != nil {
		in, out := &in.PaymentDuration, &out.PaymentDuration
		*out = new(float64)
		**out = **in
	}
	if in.PaymentDurationUnit != nil {
		in, out := &in.PaymentDurationUnit, &out.PaymentDurationUnit
		*out = new(string)
		**out = **in
	}
	if in.PaymentType != nil {
		in, out := &in.PaymentType, &out.PaymentType
		*out = new(string)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(float64)
		**out = **in
	}
	if in.SourceEndpointEngineName != nil {
		in, out := &in.SourceEndpointEngineName, &out.SourceEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointRegion != nil {
		in, out := &in.SourceEndpointRegion, &out.SourceEndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.SyncArchitecture != nil {
		in, out := &in.SyncArchitecture, &out.SyncArchitecture
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationInstanceParameters.
func (in *SynchronizationInstanceParameters) DeepCopy() *SynchronizationInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(SynchronizationInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationInstanceSpec) DeepCopyInto(out *SynchronizationInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationInstanceSpec.
func (in *SynchronizationInstanceSpec) DeepCopy() *SynchronizationInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(SynchronizationInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationInstanceStatus) DeepCopyInto(out *SynchronizationInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationInstanceStatus.
func (in *SynchronizationInstanceStatus) DeepCopy() *SynchronizationInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(SynchronizationInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationJob) DeepCopyInto(out *SynchronizationJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationJob.
func (in *SynchronizationJob) DeepCopy() *SynchronizationJob {
	if in == nil {
		return nil
	}
	out := new(SynchronizationJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SynchronizationJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationJobList) DeepCopyInto(out *SynchronizationJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SynchronizationJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationJobList.
func (in *SynchronizationJobList) DeepCopy() *SynchronizationJobList {
	if in == nil {
		return nil
	}
	out := new(SynchronizationJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SynchronizationJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationJobObservation) DeepCopyInto(out *SynchronizationJobObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationJobObservation.
func (in *SynchronizationJobObservation) DeepCopy() *SynchronizationJobObservation {
	if in == nil {
		return nil
	}
	out := new(SynchronizationJobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationJobParameters) DeepCopyInto(out *SynchronizationJobParameters) {
	*out = *in
	if in.Checkpoint != nil {
		in, out := &in.Checkpoint, &out.Checkpoint
		*out = new(string)
		**out = **in
	}
	if in.DBList != nil {
		in, out := &in.DBList, &out.DBList
		*out = new(string)
		**out = **in
	}
	if in.DataInitialization != nil {
		in, out := &in.DataInitialization, &out.DataInitialization
		*out = new(bool)
		**out = **in
	}
	if in.DataSynchronization != nil {
		in, out := &in.DataSynchronization, &out.DataSynchronization
		*out = new(bool)
		**out = **in
	}
	if in.DelayNotice != nil {
		in, out := &in.DelayNotice, &out.DelayNotice
		*out = new(bool)
		**out = **in
	}
	if in.DelayPhone != nil {
		in, out := &in.DelayPhone, &out.DelayPhone
		*out = new(string)
		**out = **in
	}
	if in.DelayRuleTime != nil {
		in, out := &in.DelayRuleTime, &out.DelayRuleTime
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointDatabaseName != nil {
		in, out := &in.DestinationEndpointDatabaseName, &out.DestinationEndpointDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointEngineName != nil {
		in, out := &in.DestinationEndpointEngineName, &out.DestinationEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointIP != nil {
		in, out := &in.DestinationEndpointIP, &out.DestinationEndpointIP
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointInstanceID != nil {
		in, out := &in.DestinationEndpointInstanceID, &out.DestinationEndpointInstanceID
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointInstanceType != nil {
		in, out := &in.DestinationEndpointInstanceType, &out.DestinationEndpointInstanceType
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointOracleSid != nil {
		in, out := &in.DestinationEndpointOracleSid, &out.DestinationEndpointOracleSid
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointPassword != nil {
		in, out := &in.DestinationEndpointPassword, &out.DestinationEndpointPassword
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointPort != nil {
		in, out := &in.DestinationEndpointPort, &out.DestinationEndpointPort
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointRegion != nil {
		in, out := &in.DestinationEndpointRegion, &out.DestinationEndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.DestinationEndpointUserName != nil {
		in, out := &in.DestinationEndpointUserName, &out.DestinationEndpointUserName
		*out = new(string)
		**out = **in
	}
	if in.DtsInstanceID != nil {
		in, out := &in.DtsInstanceID, &out.DtsInstanceID
		*out = new(string)
		**out = **in
	}
	if in.DtsJobName != nil {
		in, out := &in.DtsJobName, &out.DtsJobName
		*out = new(string)
		**out = **in
	}
	if in.ErrorNotice != nil {
		in, out := &in.ErrorNotice, &out.ErrorNotice
		*out = new(bool)
		**out = **in
	}
	if in.ErrorPhone != nil {
		in, out := &in.ErrorPhone, &out.ErrorPhone
		*out = new(string)
		**out = **in
	}
	if in.InstanceClass != nil {
		in, out := &in.InstanceClass, &out.InstanceClass
		*out = new(string)
		**out = **in
	}
	if in.Reserve != nil {
		in, out := &in.Reserve, &out.Reserve
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointDatabaseName != nil {
		in, out := &in.SourceEndpointDatabaseName, &out.SourceEndpointDatabaseName
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointEngineName != nil {
		in, out := &in.SourceEndpointEngineName, &out.SourceEndpointEngineName
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointIP != nil {
		in, out := &in.SourceEndpointIP, &out.SourceEndpointIP
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointInstanceID != nil {
		in, out := &in.SourceEndpointInstanceID, &out.SourceEndpointInstanceID
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointInstanceType != nil {
		in, out := &in.SourceEndpointInstanceType, &out.SourceEndpointInstanceType
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointOracleSid != nil {
		in, out := &in.SourceEndpointOracleSid, &out.SourceEndpointOracleSid
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointOwnerID != nil {
		in, out := &in.SourceEndpointOwnerID, &out.SourceEndpointOwnerID
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointPassword != nil {
		in, out := &in.SourceEndpointPassword, &out.SourceEndpointPassword
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointPort != nil {
		in, out := &in.SourceEndpointPort, &out.SourceEndpointPort
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointRegion != nil {
		in, out := &in.SourceEndpointRegion, &out.SourceEndpointRegion
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointRole != nil {
		in, out := &in.SourceEndpointRole, &out.SourceEndpointRole
		*out = new(string)
		**out = **in
	}
	if in.SourceEndpointUserName != nil {
		in, out := &in.SourceEndpointUserName, &out.SourceEndpointUserName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StructureInitialization != nil {
		in, out := &in.StructureInitialization, &out.StructureInitialization
		*out = new(bool)
		**out = **in
	}
	if in.SynchronizationDirection != nil {
		in, out := &in.SynchronizationDirection, &out.SynchronizationDirection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationJobParameters.
func (in *SynchronizationJobParameters) DeepCopy() *SynchronizationJobParameters {
	if in == nil {
		return nil
	}
	out := new(SynchronizationJobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationJobSpec) DeepCopyInto(out *SynchronizationJobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationJobSpec.
func (in *SynchronizationJobSpec) DeepCopy() *SynchronizationJobSpec {
	if in == nil {
		return nil
	}
	out := new(SynchronizationJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SynchronizationJobStatus) DeepCopyInto(out *SynchronizationJobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SynchronizationJobStatus.
func (in *SynchronizationJobStatus) DeepCopy() *SynchronizationJobStatus {
	if in == nil {
		return nil
	}
	out := new(SynchronizationJobStatus)
	in.DeepCopyInto(out)
	return out
}
