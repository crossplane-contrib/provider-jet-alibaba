/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SessionManagerStatusObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SessionManagerStatusParameters struct {

	// +kubebuilder:validation:Required
	SessionManagerStatusName *string `json:"sessionManagerStatusName" tf:"session_manager_status_name,omitempty"`

	// +kubebuilder:validation:Required
	Status *string `json:"status" tf:"status,omitempty"`
}

// SessionManagerStatusSpec defines the desired state of SessionManagerStatus
type SessionManagerStatusSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SessionManagerStatusParameters `json:"forProvider"`
}

// SessionManagerStatusStatus defines the observed state of SessionManagerStatus.
type SessionManagerStatusStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SessionManagerStatusObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SessionManagerStatus is the Schema for the SessionManagerStatuss API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type SessionManagerStatus struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SessionManagerStatusSpec   `json:"spec"`
	Status            SessionManagerStatusStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SessionManagerStatusList contains a list of SessionManagerStatuss
type SessionManagerStatusList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SessionManagerStatus `json:"items"`
}

// Repository type metadata.
var (
	SessionManagerStatus_Kind             = "SessionManagerStatus"
	SessionManagerStatus_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SessionManagerStatus_Kind}.String()
	SessionManagerStatus_KindAPIVersion   = SessionManagerStatus_Kind + "." + CRDGroupVersion.String()
	SessionManagerStatus_GroupVersionKind = CRDGroupVersion.WithKind(SessionManagerStatus_Kind)
)

func init() {
	SchemeBuilder.Register(&SessionManagerStatus{}, &SessionManagerStatusList{})
}
