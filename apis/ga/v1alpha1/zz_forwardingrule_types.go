/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ForwardGroupConfigObservation struct {
}

type ForwardGroupConfigParameters struct {

	// +kubebuilder:validation:Required
	ServerGroupTuples []ServerGroupTuplesParameters `json:"serverGroupTuples" tf:"server_group_tuples,omitempty"`
}

type ForwardingRuleObservation struct {
	ForwardingRuleID *string `json:"forwardingRuleId,omitempty" tf:"forwarding_rule_id,omitempty"`

	ForwardingRuleStatus *string `json:"forwardingRuleStatus,omitempty" tf:"forwarding_rule_status,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ForwardingRuleParameters struct {

	// +kubebuilder:validation:Required
	AcceleratorID *string `json:"acceleratorId" tf:"accelerator_id,omitempty"`

	// +kubebuilder:validation:Optional
	ForwardingRuleName *string `json:"forwardingRuleName,omitempty" tf:"forwarding_rule_name,omitempty"`

	// +kubebuilder:validation:Required
	ListenerID *string `json:"listenerId" tf:"listener_id,omitempty"`

	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// +kubebuilder:validation:Required
	RuleActions []RuleActionsParameters `json:"ruleActions" tf:"rule_actions,omitempty"`

	// +kubebuilder:validation:Required
	RuleConditions []RuleConditionsParameters `json:"ruleConditions" tf:"rule_conditions,omitempty"`
}

type HostConfigObservation struct {
}

type HostConfigParameters struct {

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type PathConfigObservation struct {
}

type PathConfigParameters struct {

	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type RuleActionsObservation struct {
}

type RuleActionsParameters struct {

	// +kubebuilder:validation:Required
	ForwardGroupConfig []ForwardGroupConfigParameters `json:"forwardGroupConfig" tf:"forward_group_config,omitempty"`

	// +kubebuilder:validation:Required
	Order *float64 `json:"order" tf:"order,omitempty"`

	// +kubebuilder:validation:Required
	RuleActionType *string `json:"ruleActionType" tf:"rule_action_type,omitempty"`
}

type RuleConditionsObservation struct {
}

type RuleConditionsParameters struct {

	// +kubebuilder:validation:Optional
	HostConfig []HostConfigParameters `json:"hostConfig,omitempty" tf:"host_config,omitempty"`

	// +kubebuilder:validation:Optional
	PathConfig []PathConfigParameters `json:"pathConfig,omitempty" tf:"path_config,omitempty"`

	// +kubebuilder:validation:Required
	RuleConditionType *string `json:"ruleConditionType" tf:"rule_condition_type,omitempty"`
}

type ServerGroupTuplesObservation struct {
}

type ServerGroupTuplesParameters struct {

	// +kubebuilder:validation:Required
	EndpointGroupID *string `json:"endpointGroupId" tf:"endpoint_group_id,omitempty"`
}

// ForwardingRuleSpec defines the desired state of ForwardingRule
type ForwardingRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ForwardingRuleParameters `json:"forProvider"`
}

// ForwardingRuleStatus defines the observed state of ForwardingRule.
type ForwardingRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ForwardingRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ForwardingRule is the Schema for the ForwardingRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type ForwardingRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ForwardingRuleSpec   `json:"spec"`
	Status            ForwardingRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ForwardingRuleList contains a list of ForwardingRules
type ForwardingRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ForwardingRule `json:"items"`
}

// Repository type metadata.
var (
	ForwardingRule_Kind             = "ForwardingRule"
	ForwardingRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ForwardingRule_Kind}.String()
	ForwardingRule_KindAPIVersion   = ForwardingRule_Kind + "." + CRDGroupVersion.String()
	ForwardingRule_GroupVersionKind = CRDGroupVersion.WithKind(ForwardingRule_Kind)
)

func init() {
	SchemeBuilder.Register(&ForwardingRule{}, &ForwardingRuleList{})
}
