/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RestoreJobObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type RestoreJobParameters struct {

	// +kubebuilder:validation:Optional
	Exclude *string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// +kubebuilder:validation:Optional
	Include *string `json:"include,omitempty" tf:"include,omitempty"`

	// +kubebuilder:validation:Optional
	Options *string `json:"options,omitempty" tf:"options,omitempty"`

	// +kubebuilder:validation:Optional
	RestoreJobID *string `json:"restoreJobId,omitempty" tf:"restore_job_id,omitempty"`

	// +kubebuilder:validation:Required
	RestoreType *string `json:"restoreType" tf:"restore_type,omitempty"`

	// +kubebuilder:validation:Required
	SnapshotHash *string `json:"snapshotHash" tf:"snapshot_hash,omitempty"`

	// +kubebuilder:validation:Required
	SnapshotID *string `json:"snapshotId" tf:"snapshot_id,omitempty"`

	// +kubebuilder:validation:Required
	SourceType *string `json:"sourceType" tf:"source_type,omitempty"`

	// +kubebuilder:validation:Optional
	TargetBucket *string `json:"targetBucket,omitempty" tf:"target_bucket,omitempty"`

	// +kubebuilder:validation:Optional
	TargetClientID *string `json:"targetClientId,omitempty" tf:"target_client_id,omitempty"`

	// +kubebuilder:validation:Optional
	TargetContainer *string `json:"targetContainer,omitempty" tf:"target_container,omitempty"`

	// +kubebuilder:validation:Optional
	TargetContainerClusterID *string `json:"targetContainerClusterId,omitempty" tf:"target_container_cluster_id,omitempty"`

	// +kubebuilder:validation:Optional
	TargetCreateTime *string `json:"targetCreateTime,omitempty" tf:"target_create_time,omitempty"`

	// +kubebuilder:validation:Optional
	TargetDataSourceID *string `json:"targetDataSourceId,omitempty" tf:"target_data_source_id,omitempty"`

	// +kubebuilder:validation:Optional
	TargetFileSystemID *string `json:"targetFileSystemId,omitempty" tf:"target_file_system_id,omitempty"`

	// +kubebuilder:validation:Optional
	TargetInstanceID *string `json:"targetInstanceId,omitempty" tf:"target_instance_id,omitempty"`

	// +kubebuilder:validation:Optional
	TargetPath *string `json:"targetPath,omitempty" tf:"target_path,omitempty"`

	// +kubebuilder:validation:Optional
	TargetPrefix *string `json:"targetPrefix,omitempty" tf:"target_prefix,omitempty"`

	// +kubebuilder:validation:Required
	VaultID *string `json:"vaultId" tf:"vault_id,omitempty"`
}

// RestoreJobSpec defines the desired state of RestoreJob
type RestoreJobSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RestoreJobParameters `json:"forProvider"`
}

// RestoreJobStatus defines the observed state of RestoreJob.
type RestoreJobStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RestoreJobObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// RestoreJob is the Schema for the RestoreJobs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type RestoreJob struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RestoreJobSpec   `json:"spec"`
	Status            RestoreJobStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RestoreJobList contains a list of RestoreJobs
type RestoreJobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RestoreJob `json:"items"`
}

// Repository type metadata.
var (
	RestoreJob_Kind             = "RestoreJob"
	RestoreJob_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RestoreJob_Kind}.String()
	RestoreJob_KindAPIVersion   = RestoreJob_Kind + "." + CRDGroupVersion.String()
	RestoreJob_GroupVersionKind = CRDGroupVersion.WithKind(RestoreJob_Kind)
)

func init() {
	SchemeBuilder.Register(&RestoreJob{}, &RestoreJobList{})
}
