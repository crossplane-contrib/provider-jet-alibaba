/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SharePermissionObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SharePermissionParameters struct {

	// +kubebuilder:validation:Required
	AccountID *string `json:"accountId" tf:"account_id,omitempty"`

	// +kubebuilder:validation:Required
	ImageID *string `json:"imageId" tf:"image_id,omitempty"`
}

// SharePermissionSpec defines the desired state of SharePermission
type SharePermissionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SharePermissionParameters `json:"forProvider"`
}

// SharePermissionStatus defines the observed state of SharePermission.
type SharePermissionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SharePermissionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SharePermission is the Schema for the SharePermissions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type SharePermission struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SharePermissionSpec   `json:"spec"`
	Status            SharePermissionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SharePermissionList contains a list of SharePermissions
type SharePermissionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SharePermission `json:"items"`
}

// Repository type metadata.
var (
	SharePermission_Kind             = "SharePermission"
	SharePermission_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SharePermission_Kind}.String()
	SharePermission_KindAPIVersion   = SharePermission_Kind + "." + CRDGroupVersion.String()
	SharePermission_GroupVersionKind = CRDGroupVersion.WithKind(SharePermission_Kind)
)

func init() {
	SchemeBuilder.Register(&SharePermission{}, &SharePermissionList{})
}
