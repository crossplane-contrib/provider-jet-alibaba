//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubContact) DeepCopyInto(out *SubContact) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubContact.
func (in *SubContact) DeepCopy() *SubContact {
	if in == nil {
		return nil
	}
	out := new(SubContact)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubContact) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubContactList) DeepCopyInto(out *SubContactList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubContact, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubContactList.
func (in *SubContactList) DeepCopy() *SubContactList {
	if in == nil {
		return nil
	}
	out := new(SubContactList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubContactList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubContactObservation) DeepCopyInto(out *SubContactObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubContactObservation.
func (in *SubContactObservation) DeepCopy() *SubContactObservation {
	if in == nil {
		return nil
	}
	out := new(SubContactObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubContactParameters) DeepCopyInto(out *SubContactParameters) {
	*out = *in
	if in.ContactName != nil {
		in, out := &in.ContactName, &out.ContactName
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Mobile != nil {
		in, out := &in.Mobile, &out.Mobile
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubContactParameters.
func (in *SubContactParameters) DeepCopy() *SubContactParameters {
	if in == nil {
		return nil
	}
	out := new(SubContactParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubContactSpec) DeepCopyInto(out *SubContactSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubContactSpec.
func (in *SubContactSpec) DeepCopy() *SubContactSpec {
	if in == nil {
		return nil
	}
	out := new(SubContactSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubContactStatus) DeepCopyInto(out *SubContactStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubContactStatus.
func (in *SubContactStatus) DeepCopy() *SubContactStatus {
	if in == nil {
		return nil
	}
	out := new(SubContactStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubSubscription) DeepCopyInto(out *SubSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubSubscription.
func (in *SubSubscription) DeepCopy() *SubSubscription {
	if in == nil {
		return nil
	}
	out := new(SubSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubSubscriptionList) DeepCopyInto(out *SubSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubSubscriptionList.
func (in *SubSubscriptionList) DeepCopy() *SubSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(SubSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubSubscriptionObservation) DeepCopyInto(out *SubSubscriptionObservation) {
	*out = *in
	if in.Channel != nil {
		in, out := &in.Channel, &out.Channel
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubSubscriptionObservation.
func (in *SubSubscriptionObservation) DeepCopy() *SubSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(SubSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubSubscriptionParameters) DeepCopyInto(out *SubSubscriptionParameters) {
	*out = *in
	if in.ContactIds != nil {
		in, out := &in.ContactIds, &out.ContactIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EmailStatus != nil {
		in, out := &in.EmailStatus, &out.EmailStatus
		*out = new(float64)
		**out = **in
	}
	if in.ItemName != nil {
		in, out := &in.ItemName, &out.ItemName
		*out = new(string)
		**out = **in
	}
	if in.PmsgStatus != nil {
		in, out := &in.PmsgStatus, &out.PmsgStatus
		*out = new(float64)
		**out = **in
	}
	if in.SMSStatus != nil {
		in, out := &in.SMSStatus, &out.SMSStatus
		*out = new(float64)
		**out = **in
	}
	if in.TtsStatus != nil {
		in, out := &in.TtsStatus, &out.TtsStatus
		*out = new(float64)
		**out = **in
	}
	if in.WebhookIds != nil {
		in, out := &in.WebhookIds, &out.WebhookIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WebhookStatus != nil {
		in, out := &in.WebhookStatus, &out.WebhookStatus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubSubscriptionParameters.
func (in *SubSubscriptionParameters) DeepCopy() *SubSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(SubSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubSubscriptionSpec) DeepCopyInto(out *SubSubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubSubscriptionSpec.
func (in *SubSubscriptionSpec) DeepCopy() *SubSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(SubSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubSubscriptionStatus) DeepCopyInto(out *SubSubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubSubscriptionStatus.
func (in *SubSubscriptionStatus) DeepCopy() *SubSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(SubSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubWebhook) DeepCopyInto(out *SubWebhook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubWebhook.
func (in *SubWebhook) DeepCopy() *SubWebhook {
	if in == nil {
		return nil
	}
	out := new(SubWebhook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubWebhook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubWebhookList) DeepCopyInto(out *SubWebhookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubWebhook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubWebhookList.
func (in *SubWebhookList) DeepCopy() *SubWebhookList {
	if in == nil {
		return nil
	}
	out := new(SubWebhookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubWebhookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubWebhookObservation) DeepCopyInto(out *SubWebhookObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubWebhookObservation.
func (in *SubWebhookObservation) DeepCopy() *SubWebhookObservation {
	if in == nil {
		return nil
	}
	out := new(SubWebhookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubWebhookParameters) DeepCopyInto(out *SubWebhookParameters) {
	*out = *in
	if in.ServerURL != nil {
		in, out := &in.ServerURL, &out.ServerURL
		*out = new(string)
		**out = **in
	}
	if in.WebhookName != nil {
		in, out := &in.WebhookName, &out.WebhookName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubWebhookParameters.
func (in *SubWebhookParameters) DeepCopy() *SubWebhookParameters {
	if in == nil {
		return nil
	}
	out := new(SubWebhookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubWebhookSpec) DeepCopyInto(out *SubWebhookSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubWebhookSpec.
func (in *SubWebhookSpec) DeepCopy() *SubWebhookSpec {
	if in == nil {
		return nil
	}
	out := new(SubWebhookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubWebhookStatus) DeepCopyInto(out *SubWebhookStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubWebhookStatus.
func (in *SubWebhookStatus) DeepCopy() *SubWebhookStatus {
	if in == nil {
		return nil
	}
	out := new(SubWebhookStatus)
	in.DeepCopyInto(out)
	return out
}
