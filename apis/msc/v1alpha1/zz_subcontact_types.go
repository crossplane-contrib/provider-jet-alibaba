/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SubContactObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SubContactParameters struct {

	// +kubebuilder:validation:Required
	ContactName *string `json:"contactName" tf:"contact_name,omitempty"`

	// +kubebuilder:validation:Required
	Email *string `json:"email" tf:"email,omitempty"`

	// +kubebuilder:validation:Required
	Mobile *string `json:"mobile" tf:"mobile,omitempty"`

	// +kubebuilder:validation:Required
	Position *string `json:"position" tf:"position,omitempty"`
}

// SubContactSpec defines the desired state of SubContact
type SubContactSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SubContactParameters `json:"forProvider"`
}

// SubContactStatus defines the observed state of SubContact.
type SubContactStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SubContactObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SubContact is the Schema for the SubContacts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type SubContact struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SubContactSpec   `json:"spec"`
	Status            SubContactStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SubContactList contains a list of SubContacts
type SubContactList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SubContact `json:"items"`
}

// Repository type metadata.
var (
	SubContact_Kind             = "SubContact"
	SubContact_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SubContact_Kind}.String()
	SubContact_KindAPIVersion   = SubContact_Kind + "." + CRDGroupVersion.String()
	SubContact_GroupVersionKind = CRDGroupVersion.WithKind(SubContact_Kind)
)

func init() {
	SchemeBuilder.Register(&SubContact{}, &SubContactList{})
}
