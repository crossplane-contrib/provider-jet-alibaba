/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SubWebhookObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SubWebhookParameters struct {

	// +kubebuilder:validation:Required
	ServerURL *string `json:"serverUrl" tf:"server_url,omitempty"`

	// +kubebuilder:validation:Required
	WebhookName *string `json:"webhookName" tf:"webhook_name,omitempty"`
}

// SubWebhookSpec defines the desired state of SubWebhook
type SubWebhookSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SubWebhookParameters `json:"forProvider"`
}

// SubWebhookStatus defines the observed state of SubWebhook.
type SubWebhookStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SubWebhookObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SubWebhook is the Schema for the SubWebhooks API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type SubWebhook struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SubWebhookSpec   `json:"spec"`
	Status            SubWebhookStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SubWebhookList contains a list of SubWebhooks
type SubWebhookList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SubWebhook `json:"items"`
}

// Repository type metadata.
var (
	SubWebhook_Kind             = "SubWebhook"
	SubWebhook_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SubWebhook_Kind}.String()
	SubWebhook_KindAPIVersion   = SubWebhook_Kind + "." + CRDGroupVersion.String()
	SubWebhook_GroupVersionKind = CRDGroupVersion.WithKind(SubWebhook_Kind)
)

func init() {
	SchemeBuilder.Register(&SubWebhook{}, &SubWebhookList{})
}
