/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RecycleBinObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type RecycleBinParameters struct {

	// +kubebuilder:validation:Required
	FileSystemID *string `json:"fileSystemId" tf:"file_system_id,omitempty"`

	// +kubebuilder:validation:Optional
	ReservedDays *float64 `json:"reservedDays,omitempty" tf:"reserved_days,omitempty"`
}

// RecycleBinSpec defines the desired state of RecycleBin
type RecycleBinSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RecycleBinParameters `json:"forProvider"`
}

// RecycleBinStatus defines the observed state of RecycleBin.
type RecycleBinStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RecycleBinObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// RecycleBin is the Schema for the RecycleBins API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type RecycleBin struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RecycleBinSpec   `json:"spec"`
	Status            RecycleBinStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RecycleBinList contains a list of RecycleBins
type RecycleBinList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RecycleBin `json:"items"`
}

// Repository type metadata.
var (
	RecycleBin_Kind             = "RecycleBin"
	RecycleBin_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RecycleBin_Kind}.String()
	RecycleBin_KindAPIVersion   = RecycleBin_Kind + "." + CRDGroupVersion.String()
	RecycleBin_GroupVersionKind = CRDGroupVersion.WithKind(RecycleBin_Kind)
)

func init() {
	SchemeBuilder.Register(&RecycleBin{}, &RecycleBinList{})
}
