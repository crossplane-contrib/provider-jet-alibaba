/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ManagerAccountObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	JoinMethod *string `json:"joinMethod,omitempty" tf:"join_method,omitempty"`

	JoinTime *string `json:"joinTime,omitempty" tf:"join_time,omitempty"`

	ModifyTime *string `json:"modifyTime,omitempty" tf:"modify_time,omitempty"`

	ResourceDirectoryID *string `json:"resourceDirectoryId,omitempty" tf:"resource_directory_id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ManagerAccountParameters struct {

	// +kubebuilder:validation:Optional
	AccountNamePrefix *string `json:"accountNamePrefix,omitempty" tf:"account_name_prefix,omitempty"`

	// +kubebuilder:validation:Required
	DisplayName *string `json:"displayName" tf:"display_name,omitempty"`

	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// +kubebuilder:validation:Optional
	PayerAccountID *string `json:"payerAccountId,omitempty" tf:"payer_account_id,omitempty"`
}

// ManagerAccountSpec defines the desired state of ManagerAccount
type ManagerAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagerAccountParameters `json:"forProvider"`
}

// ManagerAccountStatus defines the observed state of ManagerAccount.
type ManagerAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagerAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ManagerAccount is the Schema for the ManagerAccounts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type ManagerAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagerAccountSpec   `json:"spec"`
	Status            ManagerAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagerAccountList contains a list of ManagerAccounts
type ManagerAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagerAccount `json:"items"`
}

// Repository type metadata.
var (
	ManagerAccount_Kind             = "ManagerAccount"
	ManagerAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagerAccount_Kind}.String()
	ManagerAccount_KindAPIVersion   = ManagerAccount_Kind + "." + CRDGroupVersion.String()
	ManagerAccount_GroupVersionKind = CRDGroupVersion.WithKind(ManagerAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagerAccount{}, &ManagerAccountList{})
}
