/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ManagerControlPolicyAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ManagerControlPolicyAttachmentParameters struct {

	// +kubebuilder:validation:Required
	PolicyID *string `json:"policyId" tf:"policy_id,omitempty"`

	// +kubebuilder:validation:Required
	TargetID *string `json:"targetId" tf:"target_id,omitempty"`
}

// ManagerControlPolicyAttachmentSpec defines the desired state of ManagerControlPolicyAttachment
type ManagerControlPolicyAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagerControlPolicyAttachmentParameters `json:"forProvider"`
}

// ManagerControlPolicyAttachmentStatus defines the observed state of ManagerControlPolicyAttachment.
type ManagerControlPolicyAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagerControlPolicyAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ManagerControlPolicyAttachment is the Schema for the ManagerControlPolicyAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type ManagerControlPolicyAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagerControlPolicyAttachmentSpec   `json:"spec"`
	Status            ManagerControlPolicyAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagerControlPolicyAttachmentList contains a list of ManagerControlPolicyAttachments
type ManagerControlPolicyAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagerControlPolicyAttachment `json:"items"`
}

// Repository type metadata.
var (
	ManagerControlPolicyAttachment_Kind             = "ManagerControlPolicyAttachment"
	ManagerControlPolicyAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagerControlPolicyAttachment_Kind}.String()
	ManagerControlPolicyAttachment_KindAPIVersion   = ManagerControlPolicyAttachment_Kind + "." + CRDGroupVersion.String()
	ManagerControlPolicyAttachment_GroupVersionKind = CRDGroupVersion.WithKind(ManagerControlPolicyAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagerControlPolicyAttachment{}, &ManagerControlPolicyAttachmentList{})
}
