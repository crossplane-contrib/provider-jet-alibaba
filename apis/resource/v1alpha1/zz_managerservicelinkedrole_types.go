/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ManagerServiceLinkedRoleObservation struct {
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	RoleID *string `json:"roleId,omitempty" tf:"role_id,omitempty"`

	RoleName *string `json:"roleName,omitempty" tf:"role_name,omitempty"`
}

type ManagerServiceLinkedRoleParameters struct {

	// +kubebuilder:validation:Optional
	CustomSuffix *string `json:"customSuffix,omitempty" tf:"custom_suffix,omitempty"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	ServiceName *string `json:"serviceName" tf:"service_name,omitempty"`
}

// ManagerServiceLinkedRoleSpec defines the desired state of ManagerServiceLinkedRole
type ManagerServiceLinkedRoleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ManagerServiceLinkedRoleParameters `json:"forProvider"`
}

// ManagerServiceLinkedRoleStatus defines the observed state of ManagerServiceLinkedRole.
type ManagerServiceLinkedRoleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ManagerServiceLinkedRoleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ManagerServiceLinkedRole is the Schema for the ManagerServiceLinkedRoles API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type ManagerServiceLinkedRole struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagerServiceLinkedRoleSpec   `json:"spec"`
	Status            ManagerServiceLinkedRoleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ManagerServiceLinkedRoleList contains a list of ManagerServiceLinkedRoles
type ManagerServiceLinkedRoleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ManagerServiceLinkedRole `json:"items"`
}

// Repository type metadata.
var (
	ManagerServiceLinkedRole_Kind             = "ManagerServiceLinkedRole"
	ManagerServiceLinkedRole_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ManagerServiceLinkedRole_Kind}.String()
	ManagerServiceLinkedRole_KindAPIVersion   = ManagerServiceLinkedRole_Kind + "." + CRDGroupVersion.String()
	ManagerServiceLinkedRole_GroupVersionKind = CRDGroupVersion.WithKind(ManagerServiceLinkedRole_Kind)
)

func init() {
	SchemeBuilder.Register(&ManagerServiceLinkedRole{}, &ManagerServiceLinkedRoleList{})
}
