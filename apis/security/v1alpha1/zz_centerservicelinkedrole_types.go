/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CenterServiceLinkedRoleObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *bool `json:"status,omitempty" tf:"status,omitempty"`
}

type CenterServiceLinkedRoleParameters struct {
}

// CenterServiceLinkedRoleSpec defines the desired state of CenterServiceLinkedRole
type CenterServiceLinkedRoleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CenterServiceLinkedRoleParameters `json:"forProvider"`
}

// CenterServiceLinkedRoleStatus defines the observed state of CenterServiceLinkedRole.
type CenterServiceLinkedRoleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CenterServiceLinkedRoleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CenterServiceLinkedRole is the Schema for the CenterServiceLinkedRoles API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type CenterServiceLinkedRole struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CenterServiceLinkedRoleSpec   `json:"spec"`
	Status            CenterServiceLinkedRoleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CenterServiceLinkedRoleList contains a list of CenterServiceLinkedRoles
type CenterServiceLinkedRoleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CenterServiceLinkedRole `json:"items"`
}

// Repository type metadata.
var (
	CenterServiceLinkedRole_Kind             = "CenterServiceLinkedRole"
	CenterServiceLinkedRole_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CenterServiceLinkedRole_Kind}.String()
	CenterServiceLinkedRole_KindAPIVersion   = CenterServiceLinkedRole_Kind + "." + CRDGroupVersion.String()
	CenterServiceLinkedRole_GroupVersionKind = CRDGroupVersion.WithKind(CenterServiceLinkedRole_Kind)
)

func init() {
	SchemeBuilder.Register(&CenterServiceLinkedRole{}, &CenterServiceLinkedRoleList{})
}
