//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogObservation) DeepCopyInto(out *AccessLogObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogObservation.
func (in *AccessLogObservation) DeepCopy() *AccessLogObservation {
	if in == nil {
		return nil
	}
	out := new(AccessLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogParameters) DeepCopyInto(out *AccessLogParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogParameters.
func (in *AccessLogParameters) DeepCopy() *AccessLogParameters {
	if in == nil {
		return nil
	}
	out := new(AccessLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditObservation) DeepCopyInto(out *AuditObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditObservation.
func (in *AuditObservation) DeepCopy() *AuditObservation {
	if in == nil {
		return nil
	}
	out := new(AuditObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditParameters) DeepCopyInto(out *AuditParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditParameters.
func (in *AuditParameters) DeepCopy() *AuditParameters {
	if in == nil {
		return nil
	}
	out := new(AuditParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KialiObservation) DeepCopyInto(out *KialiObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KialiObservation.
func (in *KialiObservation) DeepCopy() *KialiObservation {
	if in == nil {
		return nil
	}
	out := new(KialiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KialiParameters) DeepCopyInto(out *KialiParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KialiParameters.
func (in *KialiParameters) DeepCopy() *KialiParameters {
	if in == nil {
		return nil
	}
	out := new(KialiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerObservation) DeepCopyInto(out *LoadBalancerObservation) {
	*out = *in
	if in.APIServerLoadbalancerID != nil {
		in, out := &in.APIServerLoadbalancerID, &out.APIServerLoadbalancerID
		*out = new(string)
		**out = **in
	}
	if in.PilotPublicLoadbalancerID != nil {
		in, out := &in.PilotPublicLoadbalancerID, &out.PilotPublicLoadbalancerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerObservation.
func (in *LoadBalancerObservation) DeepCopy() *LoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerParameters) DeepCopyInto(out *LoadBalancerParameters) {
	*out = *in
	if in.APIServerPublicEIP != nil {
		in, out := &in.APIServerPublicEIP, &out.APIServerPublicEIP
		*out = new(bool)
		**out = **in
	}
	if in.PilotPublicEIP != nil {
		in, out := &in.PilotPublicEIP, &out.PilotPublicEIP
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerParameters.
func (in *LoadBalancerParameters) DeepCopy() *LoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigObservation) DeepCopyInto(out *MeshConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigObservation.
func (in *MeshConfigObservation) DeepCopy() *MeshConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MeshConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshConfigParameters) DeepCopyInto(out *MeshConfigParameters) {
	*out = *in
	if in.AccessLog != nil {
		in, out := &in.AccessLog, &out.AccessLog
		*out = make([]AccessLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Audit != nil {
		in, out := &in.Audit, &out.Audit
		*out = make([]AuditParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomizedZipkin != nil {
		in, out := &in.CustomizedZipkin, &out.CustomizedZipkin
		*out = new(bool)
		**out = **in
	}
	if in.EnableLocalityLB != nil {
		in, out := &in.EnableLocalityLB, &out.EnableLocalityLB
		*out = new(bool)
		**out = **in
	}
	if in.Kiali != nil {
		in, out := &in.Kiali, &out.Kiali
		*out = make([]KialiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Opa != nil {
		in, out := &in.Opa, &out.Opa
		*out = make([]OpaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutboundTrafficPolicy != nil {
		in, out := &in.OutboundTrafficPolicy, &out.OutboundTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.Pilot != nil {
		in, out := &in.Pilot, &out.Pilot
		*out = make([]PilotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = make([]ProxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidecarInjector != nil {
		in, out := &in.SidecarInjector, &out.SidecarInjector
		*out = make([]SidecarInjectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Telemetry != nil {
		in, out := &in.Telemetry, &out.Telemetry
		*out = new(bool)
		**out = **in
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshConfigParameters.
func (in *MeshConfigParameters) DeepCopy() *MeshConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MeshConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshServiceMesh) DeepCopyInto(out *MeshServiceMesh) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshServiceMesh.
func (in *MeshServiceMesh) DeepCopy() *MeshServiceMesh {
	if in == nil {
		return nil
	}
	out := new(MeshServiceMesh)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MeshServiceMesh) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshServiceMeshList) DeepCopyInto(out *MeshServiceMeshList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MeshServiceMesh, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshServiceMeshList.
func (in *MeshServiceMeshList) DeepCopy() *MeshServiceMeshList {
	if in == nil {
		return nil
	}
	out := new(MeshServiceMeshList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MeshServiceMeshList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshServiceMeshObservation) DeepCopyInto(out *MeshServiceMeshObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshServiceMeshObservation.
func (in *MeshServiceMeshObservation) DeepCopy() *MeshServiceMeshObservation {
	if in == nil {
		return nil
	}
	out := new(MeshServiceMeshObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshServiceMeshParameters) DeepCopyInto(out *MeshServiceMeshParameters) {
	*out = *in
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = make([]LoadBalancerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MeshConfig != nil {
		in, out := &in.MeshConfig, &out.MeshConfig
		*out = make([]MeshConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceMeshName != nil {
		in, out := &in.ServiceMeshName, &out.ServiceMeshName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshServiceMeshParameters.
func (in *MeshServiceMeshParameters) DeepCopy() *MeshServiceMeshParameters {
	if in == nil {
		return nil
	}
	out := new(MeshServiceMeshParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshServiceMeshSpec) DeepCopyInto(out *MeshServiceMeshSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshServiceMeshSpec.
func (in *MeshServiceMeshSpec) DeepCopy() *MeshServiceMeshSpec {
	if in == nil {
		return nil
	}
	out := new(MeshServiceMeshSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshServiceMeshStatus) DeepCopyInto(out *MeshServiceMeshStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshServiceMeshStatus.
func (in *MeshServiceMeshStatus) DeepCopy() *MeshServiceMeshStatus {
	if in == nil {
		return nil
	}
	out := new(MeshServiceMeshStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VswitcheList != nil {
		in, out := &in.VswitcheList, &out.VswitcheList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpaObservation) DeepCopyInto(out *OpaObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpaObservation.
func (in *OpaObservation) DeepCopy() *OpaObservation {
	if in == nil {
		return nil
	}
	out := new(OpaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpaParameters) DeepCopyInto(out *OpaParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LimitCPU != nil {
		in, out := &in.LimitCPU, &out.LimitCPU
		*out = new(string)
		**out = **in
	}
	if in.LimitMemory != nil {
		in, out := &in.LimitMemory, &out.LimitMemory
		*out = new(string)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
	if in.RequestCPU != nil {
		in, out := &in.RequestCPU, &out.RequestCPU
		*out = new(string)
		**out = **in
	}
	if in.RequestMemory != nil {
		in, out := &in.RequestMemory, &out.RequestMemory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpaParameters.
func (in *OpaParameters) DeepCopy() *OpaParameters {
	if in == nil {
		return nil
	}
	out := new(OpaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PilotObservation) DeepCopyInto(out *PilotObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PilotObservation.
func (in *PilotObservation) DeepCopy() *PilotObservation {
	if in == nil {
		return nil
	}
	out := new(PilotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PilotParameters) DeepCopyInto(out *PilotParameters) {
	*out = *in
	if in.Http10Enabled != nil {
		in, out := &in.Http10Enabled, &out.Http10Enabled
		*out = new(bool)
		**out = **in
	}
	if in.TraceSampling != nil {
		in, out := &in.TraceSampling, &out.TraceSampling
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PilotParameters.
func (in *PilotParameters) DeepCopy() *PilotParameters {
	if in == nil {
		return nil
	}
	out := new(PilotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyObservation) DeepCopyInto(out *ProxyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyObservation.
func (in *ProxyObservation) DeepCopy() *ProxyObservation {
	if in == nil {
		return nil
	}
	out := new(ProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyParameters) DeepCopyInto(out *ProxyParameters) {
	*out = *in
	if in.LimitCPU != nil {
		in, out := &in.LimitCPU, &out.LimitCPU
		*out = new(string)
		**out = **in
	}
	if in.LimitMemory != nil {
		in, out := &in.LimitMemory, &out.LimitMemory
		*out = new(string)
		**out = **in
	}
	if in.RequestCPU != nil {
		in, out := &in.RequestCPU, &out.RequestCPU
		*out = new(string)
		**out = **in
	}
	if in.RequestMemory != nil {
		in, out := &in.RequestMemory, &out.RequestMemory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyParameters.
func (in *ProxyParameters) DeepCopy() *ProxyParameters {
	if in == nil {
		return nil
	}
	out := new(ProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidecarInjectorObservation) DeepCopyInto(out *SidecarInjectorObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidecarInjectorObservation.
func (in *SidecarInjectorObservation) DeepCopy() *SidecarInjectorObservation {
	if in == nil {
		return nil
	}
	out := new(SidecarInjectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidecarInjectorParameters) DeepCopyInto(out *SidecarInjectorParameters) {
	*out = *in
	if in.AutoInjectionPolicyEnabled != nil {
		in, out := &in.AutoInjectionPolicyEnabled, &out.AutoInjectionPolicyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.EnableNamespacesByDefault != nil {
		in, out := &in.EnableNamespacesByDefault, &out.EnableNamespacesByDefault
		*out = new(bool)
		**out = **in
	}
	if in.LimitCPU != nil {
		in, out := &in.LimitCPU, &out.LimitCPU
		*out = new(string)
		**out = **in
	}
	if in.LimitMemory != nil {
		in, out := &in.LimitMemory, &out.LimitMemory
		*out = new(string)
		**out = **in
	}
	if in.RequestCPU != nil {
		in, out := &in.RequestCPU, &out.RequestCPU
		*out = new(string)
		**out = **in
	}
	if in.RequestMemory != nil {
		in, out := &in.RequestMemory, &out.RequestMemory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidecarInjectorParameters.
func (in *SidecarInjectorParameters) DeepCopy() *SidecarInjectorParameters {
	if in == nil {
		return nil
	}
	out := new(SidecarInjectorParameters)
	in.DeepCopyInto(out)
	return out
}
