/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DHCPOptionsSetAttachmentObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type DHCPOptionsSetAttachmentParameters struct {

	// +kubebuilder:validation:Required
	DHCPOptionsSetID *string `json:"dhcpOptionsSetId" tf:"dhcp_options_set_id,omitempty"`

	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// +kubebuilder:validation:Required
	VPCID *string `json:"vpcId" tf:"vpc_id,omitempty"`
}

// DHCPOptionsSetAttachmentSpec defines the desired state of DHCPOptionsSetAttachment
type DHCPOptionsSetAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DHCPOptionsSetAttachmentParameters `json:"forProvider"`
}

// DHCPOptionsSetAttachmentStatus defines the observed state of DHCPOptionsSetAttachment.
type DHCPOptionsSetAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DHCPOptionsSetAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DHCPOptionsSetAttachment is the Schema for the DHCPOptionsSetAttachments API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type DHCPOptionsSetAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DHCPOptionsSetAttachmentSpec   `json:"spec"`
	Status            DHCPOptionsSetAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DHCPOptionsSetAttachmentList contains a list of DHCPOptionsSetAttachments
type DHCPOptionsSetAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DHCPOptionsSetAttachment `json:"items"`
}

// Repository type metadata.
var (
	DHCPOptionsSetAttachment_Kind             = "DHCPOptionsSetAttachment"
	DHCPOptionsSetAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DHCPOptionsSetAttachment_Kind}.String()
	DHCPOptionsSetAttachment_KindAPIVersion   = DHCPOptionsSetAttachment_Kind + "." + CRDGroupVersion.String()
	DHCPOptionsSetAttachment_GroupVersionKind = CRDGroupVersion.WithKind(DHCPOptionsSetAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&DHCPOptionsSetAttachment{}, &DHCPOptionsSetAttachmentList{})
}
