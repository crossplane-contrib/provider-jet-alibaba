/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IPv6EgressRuleObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type IPv6EgressRuleParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Optional
	IPv6EgressRuleName *string `json:"ipv6EgressRuleName,omitempty" tf:"ipv6_egress_rule_name,omitempty"`

	// +kubebuilder:validation:Required
	IPv6GatewayID *string `json:"ipv6GatewayId" tf:"ipv6_gateway_id,omitempty"`

	// +kubebuilder:validation:Required
	InstanceID *string `json:"instanceId" tf:"instance_id,omitempty"`

	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`
}

// IPv6EgressRuleSpec defines the desired state of IPv6EgressRule
type IPv6EgressRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IPv6EgressRuleParameters `json:"forProvider"`
}

// IPv6EgressRuleStatus defines the observed state of IPv6EgressRule.
type IPv6EgressRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IPv6EgressRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// IPv6EgressRule is the Schema for the IPv6EgressRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type IPv6EgressRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IPv6EgressRuleSpec   `json:"spec"`
	Status            IPv6EgressRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IPv6EgressRuleList contains a list of IPv6EgressRules
type IPv6EgressRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []IPv6EgressRule `json:"items"`
}

// Repository type metadata.
var (
	IPv6EgressRule_Kind             = "IPv6EgressRule"
	IPv6EgressRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: IPv6EgressRule_Kind}.String()
	IPv6EgressRule_KindAPIVersion   = IPv6EgressRule_Kind + "." + CRDGroupVersion.String()
	IPv6EgressRule_GroupVersionKind = CRDGroupVersion.WithKind(IPv6EgressRule_Kind)
)

func init() {
	SchemeBuilder.Register(&IPv6EgressRule{}, &IPv6EgressRuleList{})
}
