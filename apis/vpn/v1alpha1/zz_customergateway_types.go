/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomerGatewayObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type CustomerGatewayParameters struct {

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// +kubebuilder:validation:Required
	IPAddress *string `json:"ipAddress" tf:"ip_address,omitempty"`
}

// CustomerGatewaySpec defines the desired state of CustomerGateway
type CustomerGatewaySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomerGatewayParameters `json:"forProvider"`
}

// CustomerGatewayStatus defines the observed state of CustomerGateway.
type CustomerGatewayStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomerGatewayObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CustomerGateway is the Schema for the CustomerGateways API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloudjet}
type CustomerGateway struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CustomerGatewaySpec   `json:"spec"`
	Status            CustomerGatewayStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomerGatewayList contains a list of CustomerGateways
type CustomerGatewayList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomerGateway `json:"items"`
}

// Repository type metadata.
var (
	CustomerGateway_Kind             = "CustomerGateway"
	CustomerGateway_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomerGateway_Kind}.String()
	CustomerGateway_KindAPIVersion   = CustomerGateway_Kind + "." + CRDGroupVersion.String()
	CustomerGateway_GroupVersionKind = CRDGroupVersion.WithKind(CustomerGateway_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomerGateway{}, &CustomerGatewayList{})
}
